[{"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\index.js":"1","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\reportWebVitals.js":"2","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\App.js":"3","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\layout\\Footer.js":"4","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\layout\\Dashboard\\UserDash.js":"5","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\Profile\\Profile.js":"6","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\layout\\Navbar\\Navbar.js":"7","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\Details\\LoanForm.js":"8","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\Details\\Payment.js":"9","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\auth\\ProtectedRouteUser.js":"10","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\auth\\Login.js":"11","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\auth\\ProtectedRouteAdmin.js":"12","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\layout\\Dashboard\\AdminDash.js":"13","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\layout\\Spinner.js":"14","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\Details\\Details.js":"15","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\Profile\\UpdateProfile.js":"16","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\auth\\UserLogin.js":"17","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\auth\\AdminLogin.js":"18","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\auth\\Register.js":"19","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\Charts\\LoanChart.js":"20","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\Charts\\TenureChart.js":"21","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\Charts\\AdminChart.js":"22","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\Charts\\TransactionStatusChart.js":"23"},{"size":637,"mtime":1612774007711,"results":"24","hashOfConfig":"25"},{"size":375,"mtime":1612774007713,"results":"26","hashOfConfig":"25"},{"size":1645,"mtime":1616500967426,"results":"27","hashOfConfig":"25"},{"size":434,"mtime":1614772067524,"results":"28","hashOfConfig":"25"},{"size":7320,"mtime":1616570275383,"results":"29","hashOfConfig":"25"},{"size":3812,"mtime":1616500967442,"results":"30","hashOfConfig":"25"},{"size":2979,"mtime":1616500967458,"results":"31","hashOfConfig":"25"},{"size":3674,"mtime":1616500967436,"results":"32","hashOfConfig":"25"},{"size":2559,"mtime":1616568921641,"results":"33","hashOfConfig":"25"},{"size":611,"mtime":1616500967448,"results":"34","hashOfConfig":"25"},{"size":1586,"mtime":1616500967446,"results":"35","hashOfConfig":"25"},{"size":613,"mtime":1616500967448,"results":"36","hashOfConfig":"25"},{"size":17761,"mtime":1616515768250,"results":"37","hashOfConfig":"25"},{"size":326,"mtime":1612774007692,"results":"38","hashOfConfig":"25"},{"size":8086,"mtime":1616568748722,"results":"39","hashOfConfig":"25"},{"size":5311,"mtime":1616500967443,"results":"40","hashOfConfig":"25"},{"size":2655,"mtime":1616565736493,"results":"41","hashOfConfig":"25"},{"size":2842,"mtime":1616567904896,"results":"42","hashOfConfig":"25"},{"size":5992,"mtime":1616500967449,"results":"43","hashOfConfig":"25"},{"size":2116,"mtime":1615281638988,"results":"44","hashOfConfig":"25"},{"size":2506,"mtime":1616500967430,"results":"45","hashOfConfig":"25"},{"size":2945,"mtime":1616500967429,"results":"46","hashOfConfig":"25"},{"size":4571,"mtime":1616500967431,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"zm6leg",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\index.js",[],["98","99"],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\reportWebVitals.js",[],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\App.js",[],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\layout\\Footer.js",[],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\layout\\Dashboard\\UserDash.js",["100","101"],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\Profile\\Profile.js",["102"],"import React, { useEffect, useState } from \"react\";\r\nimport avatar from \"./avatar.jpg\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCalendarAlt,\r\n  faEnvelope,\r\n  faUser,\r\n  faVenusMars,\r\n  faMobileAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport UpdateProfile from \"./UpdateProfile\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"../layout/Spinner\";\r\n\r\nconst Profile = () => {\r\n\r\n  const {id} = JSON.parse(atob(localStorage.reqData)); //decrypting the local Storage data and getting the id.\r\n\r\n  const [userProfile, setUserProfile] = useState({});\r\n  const [status, setStatus] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getProfile = async () => {\r\n      try {\r\n        const res = await axios.get(`/getUserProfile/${id}`);\r\n        setUserProfile(res.data.data);\r\n        setStatus(true);\r\n      } catch (err) {\r\n        console.log(\"user profile\", err);\r\n      }\r\n    };\r\n    getProfile();\r\n  }, []);\r\n\r\n  if (status) {\r\n    const { first_name, last_name, dob, email, gender, mobile } = userProfile;\r\n   \r\n    return (\r\n      <div className=\"container-fluid row mt-4\">\r\n        {/* <div className=\"col-sm-1\"></div> */}\r\n        <div className=\"col-sm-4 mx-auto\">\r\n          <div className=\"card shadow  animate__animated animate__fadeIn\">\r\n            <div className=\"card-header h3 font-weight-normal font-italic text-center bg-info text-light\">\r\n              Profile\r\n            </div>\r\n            <div\r\n              className=\"card-body  text-justify\"\r\n              style={{ fontSize: \"16px\" }}\r\n            >\r\n              <center>\r\n                <img\r\n                  src={avatar}\r\n                  height=\"20%\"\r\n                  width=\"20%\"\r\n                  className=\"rounded-circle shadow\"\r\n                  alt=\"avatar\"\r\n                />\r\n              </center>\r\n              <p className=\"card-text text-justify text-center  font-weight-normal h3 mt-3\">\r\n                {first_name} {last_name}\r\n              </p>\r\n              {/* <p className=\"card-text text-justify  text-center h5 text-success font-weight-normal mt-2\">Associate software Engg.</p> */}\r\n              <hr style={{ borderTop: \"2px solid slateblue\" }} />\r\n              <div className=\"ml-1 font-italic\">\r\n                <p className=\"card-text\">\r\n                  <FontAwesomeIcon\r\n                    icon={faEnvelope}\r\n                    className=\"text-info mr-2\"\r\n                  />{\" \"}\r\n                  <b>Email</b> :- {email}{\" \"}\r\n                </p>\r\n                <p className=\"card-text\">\r\n                  <FontAwesomeIcon\r\n                    icon={faVenusMars}\r\n                    className=\"text-info mr-2\"\r\n                  />\r\n                  <b>Gender</b> :- {gender}{\" \"}\r\n                </p>\r\n                <p className=\"card-text\">\r\n                  <FontAwesomeIcon icon={faUser} className=\"text-info mr-2\" />\r\n                  <b>Username</b> :- Vivek@123\r\n                </p>\r\n                <p className=\"card-text\">\r\n                  <FontAwesomeIcon\r\n                    icon={faCalendarAlt}\r\n                    className=\"text-info mr-2\"\r\n                  />\r\n                  <b>Date of Birth</b> :- {dob}{\" \"}\r\n                </p>\r\n                <p className=\"card-text\">\r\n                  <FontAwesomeIcon\r\n                    icon={faMobileAlt}\r\n                    className=\"text-info mr-2\"\r\n                  />\r\n                  <b>Mobile</b> :- {mobile}{\" \"}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-5 mx-auto\">\r\n          <UpdateProfile profile={userProfile} />\r\n        </div>\r\n        <br />\r\n      </div>\r\n    );\r\n  } else {\r\n    return <Spinner />;\r\n  }\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\layout\\Navbar\\Navbar.js",["103"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport profile from \"./profile.png\";\r\nimport loanimg from \"./loan.jfif\";\r\n\r\nconst Navbar = () => {\r\n  if (localStorage.reqData !== undefined) {\r\n    const { type, username } = JSON.parse(atob(localStorage.reqData)); //decrypting and destructuring the local Storage data.\r\n\r\n    const setPath = () => {\r\n      //Setting the route path according to the logged In type.\r\n      switch (type) {\r\n        case \"Admin\":\r\n          return \"/admin\";\r\n\r\n        case \"User\":\r\n          return \"/user\";\r\n        \r\n        default:\r\n          return \"\"\r\n      }\r\n    };\r\n\r\n    return (\r\n      <nav\r\n        className=\"navbar p-2 shadow navbar-dark navbar-expand-sm\"\r\n        style={{ backgroundColor: \"#5161ce\" }}\r\n      >\r\n        <div className=\"navbar-brand\">\r\n          <Link to={setPath()}>\r\n            {\" \"}\r\n            <img\r\n              className=\"ml-3 rounded-circle\"\r\n              src={loanimg}\r\n              width=\"45\"\r\n              height=\"45\"\r\n              alt=\"logo\"\r\n            />\r\n          </Link>\r\n          <span className=\"ml-2 h4\"> Loan Management system</span>\r\n        </div>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbar-list-4\"\r\n          aria-controls=\"navbarNav\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbar-list-4\">\r\n          <ul className=\"navbar-nav ml-auto \">\r\n            <li className=\"nav-item dropdown\">\r\n              <a\r\n                className=\"nav-link dropdown-toggle\"\r\n                role=\"button\"\r\n                data-toggle=\"dropdown\"\r\n              >\r\n                <img\r\n                  src={profile}\r\n                  width=\"40\"\r\n                  height=\"40\"\r\n                  className=\"rounded-circle\"\r\n                  alt=\"profile\"\r\n                />\r\n                <span className=\"h6 text-light p-1 font-weight-normal\">\r\n                  {\" \"}\r\n                  {username}\r\n                </span>\r\n              </a>\r\n              <div className=\"dropdown-menu\">\r\n                <Link to={setPath()} className=\"dropdown-item\">\r\n                  Dashboard\r\n                </Link>\r\n                {type === \"User\" ? (\r\n                  <Link to=\"/profile\" className=\"dropdown-item\">\r\n                    Edit Profile\r\n                  </Link>\r\n                ) : null}\r\n                <Link\r\n                  to=\"/login\"\r\n                  onClick={() => localStorage.clear()}\r\n                  className=\"dropdown-item\"\r\n                >\r\n                  Log Out\r\n                </Link>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\Details\\LoanForm.js",[],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\Details\\Payment.js",[],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\auth\\ProtectedRouteUser.js",[],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\auth\\Login.js",[],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\auth\\ProtectedRouteAdmin.js",[],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\layout\\Dashboard\\AdminDash.js",["104","105","106"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"../Spinner\";\r\nimport AdminChart from \"../../Charts/AdminChart\";\r\nimport LoanChart from \"../../Charts/LoanChart\";\r\nimport TenureChart from \"../../Charts/TenureChart\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCalendarAlt,\r\n  faEnvelope,\r\n  faLandmark,\r\n  faMobileAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport TransactioStatusChart from \"../../Charts/TransactionStatusChart\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AdminDash = () => {\r\n  const [loanType, setLoanType] = useState(null);\r\n  const [loanOptions, setLoanOptions] = useState([]);\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [loanChart, setLoanChart] = useState(null);\r\n\r\n\r\n  useEffect(() => {\r\n    //API call for getting the loanTypes.\r\n    const getLoanOptions = async () => {\r\n      try {\r\n        const res = await axios.get(\"/getAppliedLoanOptions\");\r\n        setLoanOptions(res.data.options);\r\n        setLoanChart(res.data.loan_summary);\r\n        setLoanType(res.data.options[0]);\r\n        setLoaded(true);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getLoanOptions();\r\n  }, []);\r\n\r\n  const [userList, setUserList] = useState(null);\r\n  const [status, setStatus] = useState(false);\r\n  const [modalData, setModalData] = useState(null);\r\n  const [searchType, setSearchType] = useState(\"Search By\");\r\n  const [searchData, setSearchData] = useState(\"\");\r\n  const [searchData1, setSearchData1] = useState(null);\r\n  const [tableData, setTableData] = useState(null);\r\n  const [searchStatus, setSearchStatus] = useState(true);\r\n  const [comparator, setComparator] = useState(\"=\");\r\n\r\n  useEffect(() => {\r\n    //API call for getting all the users associated with the selected LoanType.\r\n    const getAllUsers = async () => {\r\n      try {\r\n        if (loanType) {\r\n          const res = await axios.get(\"/getUsers/\", {\r\n            params: { loantype: loanType },\r\n          });\r\n          setUserList(res.data.users);\r\n          setTableData(res.data.users);\r\n          setStatus(true);\r\n        }\r\n      } catch (err) {\r\n        console.log(\"AdminDash\", err);\r\n      }\r\n    };\r\n    getAllUsers();\r\n  }, [loanType]);\r\n\r\n  const createTable = (user, index) => {\r\n    //Creating Dynamic table according the data received\r\n    if (user) {\r\n      const { user_id, first_name, last_name, total_loan, paid_loan, installment_due_date, loan_id, loan_type, loan_status } = user;\r\n      const remaining_loan = total_loan - paid_loan;\r\n\r\n      // const closeLoanData = {\r\n      //   //Payload for the Payment component after clicking the close loan button\r\n      //   installment_amt: remaining_loan,\r\n      //   installment_due_date,\r\n      //   user_id,\r\n      //   loan_id,\r\n      //   loan_type,\r\n      // };\r\n      return (\r\n        <tr key={index}>\r\n          <td className=\"text-justify\">{user_id}</td>\r\n          <td className=\"text-justify\">\r\n            {first_name} {last_name}\r\n          </td>\r\n          <td className=\"text-justify\">\r\n            {loan_id}\r\n          </td>\r\n          <td className=\"text-justify\">\r\n            <CurrencyFormat\r\n              value={total_loan}\r\n              displayType={\"text\"}\r\n              thousandSeparator={true}\r\n              prefix={\"Rs. \"}\r\n            />\r\n          </td>\r\n          <td className=\"text-justify\">\r\n            {\" \"}\r\n            <CurrencyFormat\r\n              value={parseInt(paid_loan)}\r\n              displayType={\"text\"}\r\n              thousandSeparator={true}\r\n              prefix={\"Rs. \"}\r\n            />\r\n          </td>\r\n          <td className=\"text-justify\">\r\n            <CurrencyFormat\r\n              value={parseInt(remaining_loan)}\r\n              displayType={\"text\"}\r\n              thousandSeparator={true}\r\n              prefix={\"Rs. \"}\r\n            />\r\n          </td>\r\n          <td className=\"text-justify\">\r\n            {loan_status}\r\n          </td>\r\n          <td className=\"d-flex \">\r\n            <button\r\n              type=\"button\"\r\n              className=\"container ml-2 btn btn-outline-info\"\r\n              onClick={() => setModalData(user)}\r\n              data-toggle=\"modal\"\r\n              data-target=\"#user\"\r\n            >\r\n              View Chart\r\n            </button>\r\n              {/* <Link\r\n                to={{ pathname: \"/payment\", payment_data: closeLoanData }}\r\n                className=\"btn btn-outline-success btn-block \"\r\n              >\r\n                Close Loan\r\n          </Link> */}\r\n           \r\n          </td>\r\n        </tr>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const displayModal = () => {\r\n    //Modal to display the details of each users in the table.\r\n    if (modalData) {\r\n      console.log(\"display modal\", modalData);\r\n      const {\r\n        paid_loan,\r\n        total_loan,\r\n        tenure_completed,\r\n        loan_tenure,\r\n        first_name,\r\n        user_id,\r\n        last_name,\r\n        email,\r\n        mobile,\r\n        loan_type,\r\n        issue_date,\r\n        loan_id,\r\n      } = modalData;\r\n\r\n      const tenure_remaining = loan_tenure - tenure_completed;\r\n      const remaining_loan = total_loan - paid_loan;\r\n\r\n      const loan = {\r\n        paid: parseInt(paid_loan),\r\n        remaining: parseInt(remaining_loan),\r\n      };\r\n\r\n      const tenure = {\r\n        completed: parseInt(tenure_completed),\r\n        remaining: parseInt(tenure_remaining),\r\n      };\r\n\r\n      return (\r\n        <div\r\n          key={loan_id}\r\n          className=\"modal animate__animated animate__fadeIn\"\r\n          id=\"user\"\r\n        >\r\n          <div className=\"modal-dialog modal-lg modal-dialog-centered\">\r\n            <div className=\"modal-content\">\r\n              <div\r\n                className=\"modal-header text-light\"\r\n                style={{ backgroundColor: \"#5161ce\" }}\r\n              >\r\n                <p className=\"modal-title h4\">Details</p>\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\r\n                  <span className=\"h4 text-light p-2\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <div className=\"row border ml-1 mr-1 px-2 rounded\">\r\n                  <div className=\"col-sm-3\">\r\n                    <p className=\"card-text text-justify text-center font-weight-normal h4 mt-4 pt-2\">\r\n                      {first_name} {last_name}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"col-sm\">\r\n                    <table className=\"table table-borderless\">\r\n                      <tbody>\r\n                        <tr>\r\n                          <td className=\"text-left\">\r\n                            <FontAwesomeIcon\r\n                              icon={faEnvelope}\r\n                              className=\"text-info \"\r\n                            />\r\n                            <b> Email</b> :- {email}\r\n                          </td>\r\n                          <td className=\"text-left\">\r\n                            <FontAwesomeIcon\r\n                              icon={faMobileAlt}\r\n                              className=\"text-info \"\r\n                            />\r\n                            <b> Mobile</b> :- {mobile}\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td className=\"text-left\">\r\n                            <FontAwesomeIcon\r\n                              icon={faLandmark}\r\n                              className=\"text-info\"\r\n                            />\r\n                            <b> Loan Type </b> :- {loan_type}\r\n                          </td>\r\n                          <td className=\"text-left\">\r\n                            <FontAwesomeIcon\r\n                              icon={faCalendarAlt}\r\n                              className=\"text-info\"\r\n                            />\r\n                            <b> Issue Date</b> :- {issue_date.slice(5, 16)}\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                  <div className=\"col-sm-5 mx-auto\">\r\n                    <LoanChart key={user_id} loan={loan} />\r\n                  </div>\r\n                  <div className=\"col-sm-5 mx-auto\">\r\n                    <TenureChart key={user_id} tenure={tenure} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const handleSearch = async () => {\r\n    //API call to filter table data according to the selected filter type.\r\n    try {\r\n      const params = {\r\n        search_type: searchType,\r\n        search_key: searchData,\r\n        comparator: comparator,\r\n        search_key1: searchData1,\r\n        loantype: loanType,\r\n      };\r\n      const res = await axios.get(\"/filterSearch/\", { params: params });\r\n      console.log(res.data);\r\n      if (res.data.data !== \"null\") {\r\n        setTableData(res.data.data);\r\n      } else {\r\n        setSearchStatus(false);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleSearchClear = () => {\r\n    setTableData(userList);\r\n    setSearchStatus(true);\r\n    setSearchType(\"Search By\");\r\n    setSearchData(\"\");\r\n  };\r\n\r\n  if (loaded) {\r\n    return (\r\n      <div>\r\n        <div className=\"container-fluid mt-4\">\r\n          <div className=\"row mt-2 \">\r\n            <div className=\"col-sm-3 mb-2\">\r\n              <ul className=\"nav nav-tabs \" role=\"tablist\">\r\n                <li className=\"nav-item\">\r\n                  <a\r\n                    className=\"nav-link active\"\r\n                    data-toggle=\"pill\"\r\n                    href=\"#home\"\r\n                  >\r\n                    Loan\r\n                  </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link\" data-toggle=\"pill\" href=\"#menu1\">\r\n                    Transaction\r\n                  </a>\r\n                </li>\r\n                {/* <li class=\"nav-item\">\r\n                  <a class=\"nav-link\" data-toggle=\"pill\" href=\"#menu2\">Menu 2</a>\r\n                </li> */}\r\n              </ul>\r\n              <div className=\"tab-content\">\r\n                <div id=\"home\" className=\" tab-pane active\">\r\n                  <br />\r\n                  <AdminChart loan={loanChart} />\r\n                </div>\r\n                <div id=\"menu1\" className=\" tab-pane fade\">\r\n                  <br />\r\n                  <TransactioStatusChart />{\" \"}\r\n                </div>\r\n                {/* <div id=\"menu2\" class=\" tab-pane fade\"><br />\r\n                  <h3>Menu 2</h3>\r\n                  <p>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam.</p>\r\n                </div> */}\r\n              </div>\r\n            </div>\r\n            <div className=\"col-sm-9 mb-2\">\r\n              <div className=\"row container-fluid\">\r\n                <div className=\"col-sm-4\">\r\n                  <div className=\"form-group\">\r\n                    <select\r\n                      className=\"form-control shadow-sm\"\r\n                      onChange={(e) => {\r\n                        setLoanType(e.target.value);\r\n                      }}\r\n                      name=\"loanType\"\r\n                    >\r\n                      {loanOptions\r\n                        ? loanOptions.map((option, index) => (\r\n                          <option\r\n                            className=\"h6 text-success\"\r\n                            key={index}\r\n                            value={option}\r\n                          >\r\n                            {option}\r\n                          </option>\r\n                        ))\r\n                        : null}\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-sm-8\"></div>\r\n              </div>\r\n              {status ? (\r\n                <div className=\"container-fluid mt-3\">\r\n                  {/* <div class=\"container\"> */}\r\n                  <div className=\"form-inline\">\r\n                    <div className=\"form-group\">\r\n                      <select\r\n                        onChange={(e) => setSearchType(e.target.value)}\r\n                        className=\"form-control w-100\"\r\n                        id=\"sel1\"\r\n                        value={searchType}\r\n                        name=\"search_type\"\r\n                      >\r\n                        <option>Search By</option>\r\n                        <option>User Id</option>\r\n                        <option>Name</option>\r\n                        <option>Date Issued</option>\r\n                        <option>Date Issued (Range)</option>\r\n                        <option>Loan Amount</option>\r\n                        <option>Loan Paid</option>\r\n                        <option>Loan Remaining</option>\r\n                        <option>Tenure</option>\r\n                        <option>Tenure remaining</option>\r\n                        <option>Tenure completed</option>\r\n                      </select>\r\n                    </div>\r\n                    {searchType === \"Name\" || //conditional rendering to show or hide specific input boxes.\r\n                      searchType === \"Search By\" ||\r\n                      searchType === \"User Id\" ||\r\n                      searchType === \"Date Issued (Range)\" ||\r\n                      searchType === null ? null : (\r\n                      <div className=\"form-group\">\r\n                        <select\r\n                          onChange={(e) => setComparator(e.target.value)}\r\n                          className=\"form-control w-100 mx-2\"\r\n                          id=\"sel1\"\r\n                          name=\"search_type\"\r\n                        >\r\n                          <option defaultValue> = </option>\r\n                          <option> &gt; </option>\r\n                          <option> &lt; </option>\r\n                        </select>\r\n                      </div>\r\n                    )}\r\n                    {searchType === \"Date Issued (Range)\" ? (\r\n                      <React.Fragment>\r\n                        <label className=\"pl-3\">From</label>\r\n                        <input\r\n                          className=\"form-control mx-2 w-25\"\r\n                          onChange={(e) => setSearchData(e.target.value)}\r\n                          type=\"date\"\r\n                          name=\"search_key\"\r\n                          placeholder=\"Search\"\r\n                        />\r\n                        <label>To</label>\r\n                        <input\r\n                          className=\"form-control mx-2 w-25\"\r\n                          onChange={(e) => setSearchData1(e.target.value)}\r\n                          type=\"date\"\r\n                          name=\"search_key\"\r\n                          placeholder=\"Search\"\r\n                        />\r\n                      </React.Fragment>\r\n                    ) : (\r\n                      <input\r\n                        className=\"form-control mx-2 w-25\"\r\n                        onChange={(e) => setSearchData(e.target.value)}\r\n                        type={searchType === \"Date Issued\" ? \"date\" : \"text\"}\r\n                        name=\"search_key\"\r\n                        value={searchData}\r\n                        placeholder=\"Search\"\r\n                      />\r\n                    )}\r\n\r\n                    <button\r\n                      onClick={(e) => handleSearch(e)}\r\n                      className=\"btn btn-success mx-2\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Search\r\n                    </button>\r\n                    <button\r\n                      onClick={() => handleSearchClear()}\r\n                      className=\"btn btn-success mx-2\"\r\n                    >\r\n                      Clear\r\n                    </button>\r\n                    <br />\r\n                  </div>\r\n                  {/* </div> */}\r\n                  <table className=\"table mt-3 shadow table-striped table-responsive-sm bg-light animate__animated animate__fadeIn\">\r\n                    <thead\r\n                      className=\"text-left text-light\"\r\n                      style={{ backgroundColor: \"#5161ce\" }}\r\n                    >\r\n                      <tr>\r\n                        <th className=\"h6\">ID</th>\r\n                        <th className=\"h6\">Name</th>\r\n                        <th className=\"h6\">Loan ID</th>\r\n                        <th className=\"h6\">Loan Amount</th>\r\n                        <th className=\"h6\">Loan Paid</th>\r\n                        <th className=\"h6\">Loan Remaining</th>\r\n                        <th className=\"h6\">Loan Status</th>\r\n                        <th className=\"h6 text-center\">Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {searchStatus ? (\r\n                        tableData.map(createTable)\r\n                      ) : (\r\n                        <tr>\r\n                          <td colSpan=\"6\" className=\"text-info h5\">\r\n                            No Records found\r\n                          </td>\r\n                        </tr>\r\n                      )}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {displayModal()}\r\n      </div>\r\n    );\r\n  } else {\r\n    return <Spinner />;\r\n  }\r\n};\r\n\r\nexport default AdminDash;\r\n","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\layout\\Spinner.js",[],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\Details\\Details.js",[],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\Profile\\UpdateProfile.js",[],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\auth\\UserLogin.js",[],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\auth\\AdminLogin.js",[],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\auth\\Register.js",[],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\Charts\\LoanChart.js",[],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\Charts\\TenureChart.js",[],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\Charts\\AdminChart.js",[],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\Charts\\TransactionStatusChart.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":36,"column":6,"nodeType":"113","endLine":36,"endColumn":8,"suggestions":"114"},{"ruleId":"111","severity":1,"message":"115","line":61,"column":6,"nodeType":"113","endLine":61,"endColumn":18,"suggestions":"116"},{"ruleId":"111","severity":1,"message":"115","line":33,"column":6,"nodeType":"113","endLine":33,"endColumn":8,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":56,"column":15,"nodeType":"120","endLine":60,"endColumn":16},{"ruleId":"121","severity":1,"message":"122","line":17,"column":10,"nodeType":"123","messageId":"124","endLine":17,"endColumn":14},{"ruleId":"121","severity":1,"message":"125","line":74,"column":70,"nodeType":"123","messageId":"124","endLine":74,"endColumn":90},{"ruleId":"121","severity":1,"message":"126","line":74,"column":101,"nodeType":"123","messageId":"124","endLine":74,"endColumn":110},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'id', 'loanOptions', 'loanTypeId', and 'location.state'. Either include them or remove the dependency array.","ArrayExpression",["129"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["130"],["131"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'installment_due_date' is assigned a value but never used.","'loan_type' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},"Update the dependencies array to be: [id, loanOptions, loanTypeId, location.state]",{"range":"138","text":"139"},"Update the dependencies array to be: [id, loanTypeId]",{"range":"140","text":"141"},"Update the dependencies array to be: [id]",{"range":"142","text":"143"},[1420,1422],"[id, loanOptions, loanTypeId, location.state]",[2287,2299],"[id, loanTypeId]",[959,961],"[id]"]