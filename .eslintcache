<<<<<<< HEAD
[{"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\index.js":"1","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\App.js":"2","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\reportWebVitals.js":"3","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\Profile\\Profile.js":"4","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\layout\\Navbar\\Navbar.js":"5","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\layout\\Footer.js":"6","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\Details\\Payment.js":"7","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\layout\\Dashboard\\UserDash.js":"8","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\layout\\Dashboard\\AdminDash.js":"9","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\LoanForm.js":"10","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\Profile\\UpdateProfile.js":"11","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\layout\\Spinner.js":"12","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\AdminChart.js":"13","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\TenureChart.js":"14","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\LoanChart.js":"15","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\Details\\Details.js":"16"},{"size":637,"mtime":1612774007711,"results":"17","hashOfConfig":"18"},{"size":1017,"mtime":1613715208866,"results":"19","hashOfConfig":"18"},{"size":375,"mtime":1612774007713,"results":"20","hashOfConfig":"18"},{"size":3252,"mtime":1613556342125,"results":"21","hashOfConfig":"18"},{"size":1867,"mtime":1612774007688,"results":"22","hashOfConfig":"18"},{"size":434,"mtime":1613556342137,"results":"23","hashOfConfig":"18"},{"size":2822,"mtime":1613734111054,"results":"24","hashOfConfig":"18"},{"size":4849,"mtime":1613979105179,"results":"25","hashOfConfig":"18"},{"size":8779,"mtime":1613734111066,"results":"26","hashOfConfig":"18"},{"size":4250,"mtime":1613978916514,"results":"27","hashOfConfig":"18"},{"size":6588,"mtime":1613556342128,"results":"28","hashOfConfig":"18"},{"size":326,"mtime":1612774007692,"results":"29","hashOfConfig":"18"},{"size":2149,"mtime":1613630392028,"results":"30","hashOfConfig":"18"},{"size":1911,"mtime":1613734111061,"results":"31","hashOfConfig":"18"},{"size":1890,"mtime":1613734111058,"results":"32","hashOfConfig":"18"},{"size":5207,"mtime":1613973096951,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"zm6leg",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"36"},"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\index.js",[],["72","73"],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\App.js",[],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\reportWebVitals.js",[],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\Profile\\Profile.js",[],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\layout\\Navbar\\Navbar.js",["74"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport profile from './profile.png';\r\nimport loanimg from './loan.jfif';\r\n\r\nconst Navbar = () => {\r\n\r\n   \r\n    return (\r\n        <nav className=\"navbar p-2 shadow navbar-dark navbar-expand-sm\" style={{backgroundColor:'#5161ce'}}>\r\n            <div className=\"navbar-brand\">\r\n               <Link to=\"/\"> <img className =\"ml-3 rounded-circle\" src={loanimg} width=\"45\" height=\"45\" alt=\"logo\"/></Link>\r\n               <span className=\"ml-2 h4\"> Loan Management system</span>\r\n            </div>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbar-list-4\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbar-list-4\">\r\n                <ul className=\"navbar-nav ml-auto \">\r\n                    <li className=\"nav-item dropdown\">\r\n                        <a className=\"nav-link dropdown-toggle\"  role=\"button\" data-toggle=\"dropdown\" >\r\n                            <img src={profile} width=\"40\" height=\"40\" className=\"rounded-circle\" alt=\"profile\" />\r\n                           <span className=\"h6 text-light p-1 font-weight-normal\"> Vivek Thakare</span>\r\n                        </a>\r\n                        <div className=\"dropdown-menu\" >\r\n                            <Link to=\"/\" className=\"dropdown-item\">Dashboard</Link>\r\n                            <Link to=\"/profile\" className=\"dropdown-item\">Edit Profile</Link>\r\n                            <Link to=\"/logout\" className=\"dropdown-item\">Log Out</Link>\r\n                        </div>\r\n                    </li>   \r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\layout\\Footer.js",[],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\Details\\Payment.js",["75"],"import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport { Checkmark } from 'react-checkmark'\r\nimport SyncLoader from \"react-spinners/SyncLoader\";\r\nimport ClockLoader from \"react-spinners/ClockLoader\"\r\nimport { Redirect } from 'react-router-dom';\r\nexport default class Payment extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            res: null,\r\n            payment_done: false,\r\n            redirect:false\r\n        }\r\n    }\r\n    pay_money = async (amount, user_id, loan_id) => {\r\n        try {\r\n            const res = await axios.get('/payLoan/', { params: { 'uid': user_id, 'lid': loan_id, 'amount': amount } });\r\n            // console.log(res.data)\r\n            this.setState({ res: res.data, payment_done: true })\r\n            console.log(res,'api result')\r\n        } catch (err) {\r\n            console.log(\"payment\", err);\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const payment_data = this.props.location.payment_data\r\n        console.log(payment_data)\r\n        setTimeout(() => {\r\n            this.pay_money(payment_data.installment_amt, payment_data.user_id, payment_data.loan_id)\r\n        }, 3000);\r\n        setTimeout(() => {\r\n            this.setState({redirect:true})\r\n        }, 7000);\r\n\r\n    }\r\n    render() {\r\n        if (!this.state.payment_done) {\r\n            return (\r\n                <div className='container '>\r\n                    \r\n                    <div className=\"jumbotron p-5 m-4\">\r\n                        <p className=\"display-4\">payment processing</p>\r\n                        <SyncLoader size={10 }  color={'gray'}></SyncLoader>\r\n                    </div>\r\n                   \r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n           \r\n            if(!this.state.redirect){\r\n                return (\r\n                   <div className='container '>\r\n                       <div className=\"jumbotron p-4 pb-5 m-4\">\r\n                            <Checkmark size='xxLarge'></Checkmark>\r\n                            <h3 className=\" text-success mt-2\">Payment Recieved </h3>\r\n                            <h4 className=\"text-success mt-2\">Thank You for your Payment</h4>\r\n                            <p>You can check transaction history for your records</p>\r\n                            <div>\r\n                                <h4>Total Payment Amount</h4>\r\n                                <h3>Rs. {this.state.res.data[2]}</h3>\r\n                            </div>\r\n                            <p>please wait while we are redirecting you to Dashboard</p> \r\n                       </div>\r\n                   </div>\r\n                )\r\n            }else{\r\n                return(\r\n                    <Redirect to='/'></Redirect>\r\n                )\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n}\r\n","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\layout\\Dashboard\\UserDash.js",["76"],"import React, { useEffect, useState } from 'react';\r\nimport LoanChart from '../../LoanChart';\r\nimport axios from 'axios';\r\nimport TenureChart from '../../TenureChart';\r\nimport Spinner from '../Spinner';\r\nimport Details from '../../Details/Details';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst UserDash = () => {\r\n\r\n  \r\n    const [loanType, setLoanType] = useState(null);\r\n    const [loanOptions, setLoanOptions] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const getLoanOptions = async(id) => {\r\n            try{\r\n                const res = await axios.get(`/getLoanOptions/${id}`);\r\n                setLoanOptions(res.data.loan_options);\r\n                setLoanType(res.data.loan_options[0]);\r\n            }catch(err){\r\n                console.log(err);\r\n            }\r\n        }\r\n        getLoanOptions(2);\r\n    }, []);\r\n\r\n\r\n    const [userDetails, setUserDetails] = useState(null);\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [transactionHistory,setTransactionHistory] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const getLoanDetails = async(id) => {\r\n            try{\r\n                const params = {\"id\":id, \"loantype\":loanType};\r\n                const res = await axios.get(`/getUserLoanDetails/`,{params : params});\r\n                setUserDetails(res.data.data);\r\n                setTransactionHistory(res.data.transaction_history)\r\n                console.log(res.data.transaction_history,'user dash state')\r\n                console.log(res.data)\r\n                setLoaded(true);\r\n                \r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        getLoanDetails(2);\r\n\r\n    }, [loanType]);\r\n\r\n    const DisplayResults = () => {\r\n        if(loaded){\r\n            if(userDetails){\r\n                const {paid_loan, total_loan, loan_tenure, tenure_completed} = userDetails;\r\n                const loan={\r\n                    paid:parseInt(paid_loan),\r\n                    remaining:parseInt(total_loan) - parseInt(paid_loan)\r\n                }\r\n                const tenure={\r\n                    completed:parseInt(tenure_completed),\r\n                    remaining:parseInt(loan_tenure) - parseInt(tenure_completed)\r\n                }\r\n                return (\r\n                    <div>\r\n                        <div className=\"container-fluid \">\r\n                            <div className=\"row mt-2 \">\r\n                                <div className=\"col-sm-3 mb-2\"> \r\n                                    <LoanChart loan = {loan} />\r\n                                </div>\r\n                                <div className=\"col-sm-6 mb-2\">\r\n                                    <Details userDetails = {userDetails} transactionHistory={transactionHistory}/>   \r\n                                </div>\r\n                                <div className=\"col-sm-3\"> \r\n                                    <TenureChart tenure = {tenure}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }else{\r\n                return null;\r\n            }\r\n        }else {\r\n            return (\r\n                <Spinner />\r\n            );\r\n        }\r\n    }\r\n   \r\n\r\n    const handleChange = (e) => {\r\n        setLoanType(e.target.value);\r\n        setLoaded(false);\r\n    }\r\n\r\n    const nextDate = () => {\r\n        let d = new Date();\r\n        console.log(d);\r\n        let d2 = new Date(d.getFullYear(), d.getMonth(), d.getDate() + 30);\r\n        console.log(d2.toLocaleDateString());\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row container-fluid\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"ml-auto\">\r\n                        <Link to=\"/newloan\" className=\"btn shadow-sm w-50 btn-block btn-outline-info mt-4\">New Loan</Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-3\"></div>\r\n                <div className=\"col-sm-3\">\r\n                    <div className=\"mt-4\">\r\n                        <div className=\"form-group\">\r\n                            <select className=\"form-control shadow-sm\" onChange={(e) => {handleChange(e)}} name=\"loanType\">\r\n                                {   loanOptions ? \r\n                                    loanOptions.map((option, index) => (\r\n                                        <option className=\"h6 text-success\" key={index} value={option}>{option}</option>\r\n                                    ))\r\n                                    : null\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <DisplayResults />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default UserDash;","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\layout\\Dashboard\\AdminDash.js",[],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\LoanForm.js",[],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\Profile\\UpdateProfile.js",[],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\layout\\Spinner.js",[],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\AdminChart.js",[],["77","78"],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\TenureChart.js",[],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\LoanChart.js",[],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\Details\\Details.js",["79","80","81","82","83"],"import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Payment from \"./Payment\";\r\n\r\nconst tableStyle = {\r\n  borderCollapse: \"separate\",\r\n  borderSpacing: \"0 10px\",\r\n};\r\n\r\nconst Details = (props) => {\r\n  const[toggled, setToggled] = useState(false);\r\n\r\n  const {total_loan,paid_loan,loan_tenure,tenure_completed,installment_due_date,installment_amt} = props.userDetails;\r\n  const tenure_remaining= loan_tenure-tenure_completed;\r\n  const remaining_loan=total_loan-paid_loan;\r\n  const transaction_history = props.transactionHistory\r\n\r\n  console.log(transaction_history,'details component')\r\n  console.log(transaction_history)\r\n\r\n  const Pay = () => {\r\n    const { installment_amt, installment_due_date,user_id,loan_id } = props.userDetails;\r\n    const payment_data= { installment_amt, installment_due_date,user_id,loan_id }\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"card shadow-sm mt-4\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"card-header h6 rounded text-white\"\r\n                        style={{ backgroundColor: \"#76b900\" }}>\r\n                        Current Installment\r\n                    </div>\r\n                    <hr></hr>\r\n                    <p className=\"card-text my-2\">Amount : Rs. {installment_amt} </p>\r\n                    <p className=\"card-text\">Due Date: {installment_due_date} </p>\r\n                    \r\n                    <Link to={{pathname:'/payment',payment_data:payment_data}}  className=\"btn btn-primary mt-1\" >Pay Now</Link>\r\n                    \r\n                </div>\r\n            </div>\r\n            <div className=\"container mt-4\">\r\n                <button className=\"btn btn-outline-success btn-block \">Close Loan</button>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"card shadow\">\r\n      <div className=\"card-body\">\r\n        <div\r\n          className=\"card-header shadow h5 rounded text-white\"\r\n          style={{ backgroundColor: \"#e66220\" }}\r\n        >\r\n          Details\r\n        </div>\r\n        <div className=\"row mt-2\">\r\n          <div className=\"col-sm-6\">\r\n            <div className=\"card shadow-sm mt-3\">\r\n              <div className=\"card-body\">\r\n                <div className=\"card-header h6 rounded text-white\"\r\n                  style={{backgroundColor: \"#5161ce\" }}>\r\n                  Loan (in Rs.)\r\n              </div>\r\n                <hr></hr>\r\n                <div className=\"text-left ml-2  font-italic\">\r\n                  <p className=\"card-text\">Loan Amount : {parseInt(remaining_loan) + parseInt(paid_loan)} Rs. </p>\r\n                  <p className=\"card-text\">Paid : {paid_loan} Rs. </p>\r\n                  <p className=\"card-text\">Remaining : {remaining_loan} Rs. </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm-6\">\r\n            <div className=\"card shadow-sm mt-3\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"card-header h6 rounded text-white\"\r\n                    style={{backgroundColor: \"#76b900\" }}>\r\n                    Tenure (in Years.)\r\n                </div>\r\n                  <hr></hr>\r\n                  <div className=\"text-center  font-italic\">\r\n                    <p className=\"card-text\">Total : {parseInt(tenure_completed) + parseInt(tenure_remaining)} </p>\r\n                    <p className=\"card-text\">Completed : {tenure_completed} </p>\r\n                    <p className=\"card-text\">Remaining : {tenure_remaining} </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row \">\r\n          <div className=\"col-sm-6\">\r\n            <div className=\"card mt-4 shadow-sm\">\r\n              <div className=\"card-body\">\r\n                <div className=\"card-header h6 rounded text-white\"\r\n                  style={{ backgroundColor: \"#5161ce\" }}>\r\n                  Transaction History\r\n              </div>\r\n                <table className=\"table table-responsive \">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\">Id</th>\r\n                      <th scope=\"col\">Amount</th>\r\n                      <th scope=\"col\">Date</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                   \r\n                      \r\n                      {transaction_history?transaction_history.map((res,index)=>(\r\n                        <tr key={index}>\r\n                           <th scope=\"row\">{res.tid}</th>\r\n                           <td>Rs.{res.paid_amount} </td>\r\n                           <td>{res.date.slice(4,16)}</td>\r\n                        </tr>\r\n                        )):null\r\n                        }\r\n                     \r\n                    \r\n                   \r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm\">\r\n            <Pay/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {toggled ? <Redirect to=\"/\"/>\r\n               : null}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nexport default Details;\r\n",{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":21,"column":25,"nodeType":"90","endLine":21,"endColumn":104},{"ruleId":"91","severity":1,"message":"92","line":5,"column":8,"nodeType":"93","messageId":"94","endLine":5,"endColumn":19},{"ruleId":"91","severity":1,"message":"95","line":97,"column":11,"nodeType":"93","messageId":"94","endLine":97,"endColumn":19},{"ruleId":"84","replacedBy":"96"},{"ruleId":"86","replacedBy":"97"},{"ruleId":"91","severity":1,"message":"98","line":3,"column":8,"nodeType":"93","messageId":"94","endLine":3,"endColumn":15},{"ruleId":"91","severity":1,"message":"99","line":5,"column":7,"nodeType":"93","messageId":"94","endLine":5,"endColumn":17},{"ruleId":"91","severity":1,"message":"100","line":11,"column":18,"nodeType":"93","messageId":"94","endLine":11,"endColumn":28},{"ruleId":"91","severity":1,"message":"101","line":13,"column":60,"nodeType":"93","messageId":"94","endLine":13,"endColumn":80},{"ruleId":"91","severity":1,"message":"102","line":13,"column":81,"nodeType":"93","messageId":"94","endLine":13,"endColumn":96},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'ClockLoader' is defined but never used.","Identifier","unusedVar","'nextDate' is assigned a value but never used.",["103"],["104"],"'Payment' is defined but never used.","'tableStyle' is assigned a value but never used.","'setToggled' is assigned a value but never used.","'installment_due_date' is assigned a value but never used.","'installment_amt' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
=======
[{"C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\index.js":"1","C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\reportWebVitals.js":"2","C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\App.js":"3","C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\LoanForm.js":"4","C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\layout\\Footer.js":"5","C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\layout\\Navbar\\Navbar.js":"6","C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\layout\\Dashboard\\AdminDash.js":"7","C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\Profile\\Profile.js":"8","C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\layout\\Dashboard\\UserDash.js":"9","C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\LoanChart.js":"10","C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\TenureChart.js":"11","C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\layout\\Spinner.js":"12","C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\Profile\\UpdateProfile.js":"13","C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\AdminChart.js":"14","C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\Details\\Details.js":"15","C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\Details\\Payment.js":"16"},{"size":637,"mtime":1612781807943,"results":"17","hashOfConfig":"18"},{"size":375,"mtime":1612781807944,"results":"19","hashOfConfig":"18"},{"size":1017,"mtime":1613728496844,"results":"20","hashOfConfig":"18"},{"size":4250,"mtime":1613982687322,"results":"21","hashOfConfig":"18"},{"size":434,"mtime":1613548113530,"results":"22","hashOfConfig":"18"},{"size":1867,"mtime":1612781807924,"results":"23","hashOfConfig":"18"},{"size":10357,"mtime":1613993931584,"results":"24","hashOfConfig":"18"},{"size":3252,"mtime":1613552142293,"results":"25","hashOfConfig":"18"},{"size":4849,"mtime":1613982687326,"results":"26","hashOfConfig":"18"},{"size":2116,"mtime":1613960778358,"results":"27","hashOfConfig":"18"},{"size":1911,"mtime":1613729102755,"results":"28","hashOfConfig":"18"},{"size":326,"mtime":1612781807926,"results":"29","hashOfConfig":"18"},{"size":6588,"mtime":1613552147270,"results":"30","hashOfConfig":"18"},{"size":2363,"mtime":1613966354974,"results":"31","hashOfConfig":"18"},{"size":6047,"mtime":1613983132573,"results":"32","hashOfConfig":"18"},{"size":2822,"mtime":1613729214482,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"a7xw99",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},"C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\index.js",[],["71","72"],"C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\reportWebVitals.js",[],"C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\App.js",[],"C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\LoanForm.js",[],"C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\layout\\Footer.js",[],"C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\layout\\Navbar\\Navbar.js",["73"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport profile from './profile.png';\r\nimport loanimg from './loan.jfif';\r\n\r\nconst Navbar = () => {\r\n\r\n   \r\n    return (\r\n        <nav className=\"navbar p-2 shadow navbar-dark navbar-expand-sm\" style={{backgroundColor:'#5161ce'}}>\r\n            <div className=\"navbar-brand\">\r\n               <Link to=\"/\"> <img className =\"ml-3 rounded-circle\" src={loanimg} width=\"45\" height=\"45\" alt=\"logo\"/></Link>\r\n               <span className=\"ml-2 h4\"> Loan Management system</span>\r\n            </div>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbar-list-4\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbar-list-4\">\r\n                <ul className=\"navbar-nav ml-auto \">\r\n                    <li className=\"nav-item dropdown\">\r\n                        <a className=\"nav-link dropdown-toggle\"  role=\"button\" data-toggle=\"dropdown\" >\r\n                            <img src={profile} width=\"40\" height=\"40\" className=\"rounded-circle\" alt=\"profile\" />\r\n                           <span className=\"h6 text-light p-1 font-weight-normal\"> Vivek Thakare</span>\r\n                        </a>\r\n                        <div className=\"dropdown-menu\" >\r\n                            <Link to=\"/\" className=\"dropdown-item\">Dashboard</Link>\r\n                            <Link to=\"/profile\" className=\"dropdown-item\">Edit Profile</Link>\r\n                            <Link to=\"/logout\" className=\"dropdown-item\">Log Out</Link>\r\n                        </div>\r\n                    </li>   \r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\layout\\Dashboard\\AdminDash.js",["74"],"C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\Profile\\Profile.js",[],"C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\layout\\Dashboard\\UserDash.js",["75"],"import React, { useEffect, useState } from 'react';\r\nimport LoanChart from '../../LoanChart';\r\nimport axios from 'axios';\r\nimport TenureChart from '../../TenureChart';\r\nimport Spinner from '../Spinner';\r\nimport Details from '../../Details/Details';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst UserDash = () => {\r\n\r\n  \r\n    const [loanType, setLoanType] = useState(null);\r\n    const [loanOptions, setLoanOptions] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const getLoanOptions = async(id) => {\r\n            try{\r\n                const res = await axios.get(`/getLoanOptions/${id}`);\r\n                setLoanOptions(res.data.loan_options);\r\n                setLoanType(res.data.loan_options[0]);\r\n            }catch(err){\r\n                console.log(err);\r\n            }\r\n        }\r\n        getLoanOptions(2);\r\n    }, []);\r\n\r\n\r\n    const [userDetails, setUserDetails] = useState(null);\r\n    const [loaded, setLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const getLoanDetails = async(id) => {\r\n            try{\r\n                const params = {\"id\":id, \"loantype\":loanType};\r\n                const res = await axios.get(`/getUserLoanDetails/`,{params : params});\r\n                setUserDetails(res.data.data);\r\n                setLoaded(true);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        getLoanDetails(2);\r\n\r\n    }, [loanType]);\r\n\r\n    const DisplayResults = () => {\r\n        if(loaded){\r\n            if(userDetails){\r\n                const {paid_loan, total_loan, loan_tenure, tenure_completed} = userDetails;\r\n                const loan={\r\n                    paid:parseInt(paid_loan),\r\n                    remaining:parseInt(total_loan) - parseInt(paid_loan)\r\n                }\r\n                const tenure={\r\n                    completed:parseInt(tenure_completed),\r\n                    remaining:parseInt(loan_tenure) - parseInt(tenure_completed)\r\n                }\r\n                return (\r\n                    <div>\r\n                        <div className=\"container-fluid \">\r\n                            <div className=\"row mt-2 \">\r\n                                <div className=\"col-sm-3 mb-2\"> \r\n                                    <LoanChart loan = {loan} />\r\n                                </div>\r\n                                <div className=\"col-sm-6 mb-2\">\r\n                                    <Details userDetails = {userDetails}/>   \r\n                                </div>\r\n                                <div className=\"col-sm-3\"> \r\n                                    <TenureChart tenure = {tenure}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n            }else{\r\n                return null;\r\n            }\r\n        }else {\r\n            return (\r\n                <Spinner />\r\n            );\r\n        }\r\n    }\r\n   \r\n\r\n    const handleChange = (e) => {\r\n        setLoanType(e.target.value);\r\n        setLoaded(false);\r\n    }\r\n\r\n    const nextDate = () => {\r\n        let d = new Date();\r\n        console.log(d);\r\n        let d2 = new Date(d.getFullYear(), d.getMonth(), d.getDate() + 30);\r\n        console.log(d2.toLocaleDateString());\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row container-fluid\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"ml-auto\">\r\n                        <Link to=\"/newloan\" className=\"btn shadow-sm w-50 btn-block btn-outline-info mt-4\">New Loan</Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-3\"></div>\r\n                <div className=\"col-sm-3\">\r\n                    <div className=\"mt-4\">\r\n                        <div className=\"form-group\">\r\n                            <select className=\"form-control shadow-sm\" onChange={(e) => {handleChange(e)}} name=\"loanType\">\r\n                                {   loanOptions ? \r\n                                    loanOptions.map((option, index) => (\r\n                                        <option className=\"h6 text-success\" key={index} value={option}>{option}</option>\r\n                                    ))\r\n                                    : null\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <DisplayResults />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default UserDash;","C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\LoanChart.js",[],"C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\TenureChart.js",[],"C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\layout\\Spinner.js",[],"C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\Profile\\UpdateProfile.js",[],"C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\AdminChart.js",[],"C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\Details\\Details.js",["76","77","78","79","80","81"],"import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Payment from \"./Payment\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\n\r\nconst tableStyle = {\r\n  borderCollapse: \"separate\",\r\n  borderSpacing: \"0 10px\",\r\n};\r\n\r\nconst Details = (props) => {\r\n  const {\r\n    total_loan,\r\n    paid_loan,\r\n    loan_tenure,\r\n    tenure_completed,\r\n    installment_due_date,\r\n    installment_amt,\r\n  } = props.userDetails;\r\n  \r\n  const tenure_remaining = loan_tenure - tenure_completed;\r\n  const remaining_loan = total_loan - paid_loan;\r\n  const transaction_history = props.transactionHistory;\r\n\r\n\r\n  const Pay = () => {\r\n    const {\r\n      installment_amt,\r\n      installment_due_date,\r\n      user_id,\r\n      loan_id,\r\n    } = props.userDetails;\r\n\r\n    const payment_data = {\r\n      installment_amt,\r\n      installment_due_date,\r\n      user_id,\r\n      loan_id,\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"card shadow-sm mt-4\">\r\n          <div className=\"card-body\">\r\n            <div\r\n              className=\"card-header h6 rounded text-white\"\r\n              style={{ backgroundColor: \"#76b900\" }}\r\n            >\r\n              Current Installment\r\n            </div>\r\n            <hr></hr>\r\n            <p className=\"card-text my-2\">Amount : Rs. {installment_amt} </p>\r\n            <p className=\"card-text\">Due Date: {installment_due_date} </p>\r\n\r\n            <Link\r\n              to={{ pathname: \"/payment\", payment_data: payment_data }}\r\n              className=\"btn btn-primary mt-1\"\r\n            >\r\n              Pay Now\r\n            </Link>\r\n          </div>\r\n        </div>\r\n        <div className=\"container mt-4\">\r\n          <button className=\"btn btn-outline-success btn-block \">\r\n            Close Loan\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"card shadow\">\r\n      <div className=\"card-body\">\r\n        <div\r\n          className=\"card-header shadow h5 rounded text-white\"\r\n          style={{ backgroundColor: \"#e66220\" }}\r\n        >\r\n          Details\r\n        </div>\r\n        <div className=\"row mt-2\">\r\n          <div className=\"col-sm-6\">\r\n            <div className=\"card shadow-sm mt-3\">\r\n              <div className=\"card-body\">\r\n                <div\r\n                  className=\"card-header h6 rounded text-white\"\r\n                  style={{ backgroundColor: \"#5161ce\" }}\r\n                >\r\n                  Loan (in Rs.)\r\n                </div>\r\n                <hr></hr>\r\n                <div className=\"text-left ml-2  font-italic\">\r\n                  <p className=\"card-text\">\r\n                    Loan Amount :{\" \"}\r\n                    <CurrencyFormat\r\n                      value={parseInt(remaining_loan) + parseInt(paid_loan)}\r\n                      displayType={\"text\"}\r\n                      thousandSeparator={true}\r\n                      prefix={\"Rs. \"}\r\n                    />\r\n                  </p>\r\n                  <p className=\"card-text\">\r\n                    Paid :{\" \"}\r\n                    <CurrencyFormat\r\n                      value={paid_loan}\r\n                      displayType={\"text\"}\r\n                      thousandSeparator={true}\r\n                      prefix={\"Rs. \"}\r\n                    />{\" \"}\r\n                  </p>\r\n                  <p className=\"card-text\">\r\n                    Remaining :{\" \"}\r\n                    <CurrencyFormat\r\n                      value={remaining_loan}\r\n                      displayType={\"text\"}\r\n                      thousandSeparator={true}\r\n                      prefix={\"Rs. \"}\r\n                    />{\" \"}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm-6\">\r\n            <div className=\"card shadow-sm mt-3\">\r\n              <div className=\"card-body\">\r\n                <div\r\n                  className=\"card-header h6 rounded text-white\"\r\n                  style={{ backgroundColor: \"#76b900\" }}\r\n                >\r\n                  Tenure (in Years.)\r\n                </div>\r\n                <hr></hr>\r\n                <div className=\"text-center  font-italic\">\r\n                  <p className=\"card-text\">\r\n                    Total :{\" \"}\r\n                    {parseInt(tenure_completed) + parseInt(tenure_remaining)}{\" \"}\r\n                  </p>\r\n                  <p className=\"card-text\">Completed : {tenure_completed} </p>\r\n                  <p className=\"card-text\">Remaining : {tenure_remaining} </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row \">\r\n          <div className=\"col-sm-6\">\r\n            <div className=\"card mt-4 shadow-sm\">\r\n              <div className=\"card-body\">\r\n                <div\r\n                  className=\"card-header h6 rounded text-white\"\r\n                  style={{ backgroundColor: \"#5161ce\" }}\r\n                >\r\n                  Transaction History\r\n                </div>\r\n                <table className=\"table table-responsive \">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\">Id</th>\r\n                      <th scope=\"col\">Amount</th>\r\n                      <th scope=\"col\">Date</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {transaction_history\r\n                      ? transaction_history.map((res, index) => (\r\n                          <tr key={index}>\r\n                            <th scope=\"row\">{res.tid}</th>\r\n                            <td>Rs.{res.paid_amount} </td>\r\n                            <td>{res.date.slice(4, 16)}</td>\r\n                          </tr>\r\n                        ))\r\n                      : null}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm\">\r\n            <Pay />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\Details\\Payment.js",["82"],"import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport { Checkmark } from 'react-checkmark'\r\nimport SyncLoader from \"react-spinners/SyncLoader\";\r\nimport ClockLoader from \"react-spinners/ClockLoader\"\r\nimport { Redirect } from 'react-router-dom';\r\nexport default class Payment extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            res: null,\r\n            payment_done: false,\r\n            redirect:false\r\n        }\r\n    }\r\n    pay_money = async (amount, user_id, loan_id) => {\r\n        try {\r\n            const res = await axios.get('/payLoan/', { params: { 'uid': user_id, 'lid': loan_id, 'amount': amount } });\r\n            // console.log(res.data)\r\n            this.setState({ res: res.data, payment_done: true })\r\n            console.log(res,'api result')\r\n        } catch (err) {\r\n            console.log(\"payment\", err);\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const payment_data = this.props.location.payment_data\r\n        console.log(payment_data)\r\n        setTimeout(() => {\r\n            this.pay_money(payment_data.installment_amt, payment_data.user_id, payment_data.loan_id)\r\n        }, 3000);\r\n        setTimeout(() => {\r\n            this.setState({redirect:true})\r\n        }, 7000);\r\n\r\n    }\r\n    render() {\r\n        if (!this.state.payment_done) {\r\n            return (\r\n                <div className='container '>\r\n                    \r\n                    <div className=\"jumbotron p-5 m-4\">\r\n                        <p className=\"display-4\">payment processing</p>\r\n                        <SyncLoader size={10 }  color={'gray'}></SyncLoader>\r\n                    </div>\r\n                   \r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n           \r\n            if(!this.state.redirect){\r\n                return (\r\n                   <div className='container '>\r\n                       <div className=\"jumbotron p-4 pb-5 m-4\">\r\n                            <Checkmark size='xxLarge'></Checkmark>\r\n                            <h3 className=\" text-success mt-2\">Payment Recieved </h3>\r\n                            <h4 className=\"text-success mt-2\">Thank You for your Payment</h4>\r\n                            <p>You can check transaction history for your records</p>\r\n                            <div>\r\n                                <h4>Total Payment Amount</h4>\r\n                                <h3>Rs. {this.state.res.data[2]}</h3>\r\n                            </div>\r\n                            <p>please wait while we are redirecting you to Dashboard</p> \r\n                       </div>\r\n                   </div>\r\n                )\r\n            }else{\r\n                return(\r\n                    <Redirect to='/'></Redirect>\r\n                )\r\n\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n}\r\n",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":21,"column":25,"nodeType":"89","endLine":21,"endColumn":104},{"ruleId":"90","severity":1,"message":"91","line":190,"column":25,"nodeType":"92","messageId":"93","endLine":190,"endColumn":27},{"ruleId":"94","severity":1,"message":"95","line":92,"column":11,"nodeType":"96","messageId":"97","endLine":92,"endColumn":19},{"ruleId":"94","severity":1,"message":"98","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":25},{"ruleId":"94","severity":1,"message":"99","line":2,"column":16,"nodeType":"96","messageId":"97","endLine":2,"endColumn":24},{"ruleId":"94","severity":1,"message":"100","line":3,"column":8,"nodeType":"96","messageId":"97","endLine":3,"endColumn":15},{"ruleId":"94","severity":1,"message":"101","line":6,"column":7,"nodeType":"96","messageId":"97","endLine":6,"endColumn":17},{"ruleId":"94","severity":1,"message":"102","line":17,"column":5,"nodeType":"96","messageId":"97","endLine":17,"endColumn":25},{"ruleId":"94","severity":1,"message":"103","line":18,"column":5,"nodeType":"96","messageId":"97","endLine":18,"endColumn":20},{"ruleId":"94","severity":1,"message":"104","line":5,"column":8,"nodeType":"96","messageId":"97","endLine":5,"endColumn":19},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'nextDate' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Redirect' is defined but never used.","'Payment' is defined but never used.","'tableStyle' is assigned a value but never used.","'installment_due_date' is assigned a value but never used.","'installment_amt' is assigned a value but never used.","'ClockLoader' is defined but never used.","no-global-assign","no-unsafe-negation"]
>>>>>>> b200555e90076d78f81ba052496485f0fbdbee88
