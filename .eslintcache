[{"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\index.js":"1","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\reportWebVitals.js":"2","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\App.js":"3","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\layout\\Navbar\\Navbar.js":"4","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\layout\\Footer.js":"5","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\Profile\\Profile.js":"6","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\layout\\Dashboard\\AdminDash.js":"7","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\LoanForm.js":"8","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\layout\\Dashboard\\UserDash.js":"9","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\Profile\\UpdateProfile.js":"10","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\layout\\Spinner.js":"11","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\TenureChart.js":"12","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\AdminChart.js":"13","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\LoanChart.js":"14","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\Details\\Details.js":"15","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\Details\\Payment.js":"16"},{"size":637,"mtime":1612774007711,"results":"17","hashOfConfig":"18"},{"size":375,"mtime":1612774007713,"results":"19","hashOfConfig":"18"},{"size":1017,"mtime":1613715208866,"results":"20","hashOfConfig":"18"},{"size":1867,"mtime":1612774007688,"results":"21","hashOfConfig":"18"},{"size":434,"mtime":1613556342137,"results":"22","hashOfConfig":"18"},{"size":3252,"mtime":1613556342125,"results":"23","hashOfConfig":"18"},{"size":8800,"mtime":1613639663778,"results":"24","hashOfConfig":"18"},{"size":193,"mtime":1613647249764,"results":"25","hashOfConfig":"18"},{"size":3737,"mtime":1613649605023,"results":"26","hashOfConfig":"18"},{"size":6588,"mtime":1613556342128,"results":"27","hashOfConfig":"18"},{"size":326,"mtime":1612774007692,"results":"28","hashOfConfig":"18"},{"size":1911,"mtime":1613629848938,"results":"29","hashOfConfig":"18"},{"size":2149,"mtime":1613630392028,"results":"30","hashOfConfig":"18"},{"size":1879,"mtime":1613371236394,"results":"31","hashOfConfig":"18"},{"size":4348,"mtime":1613717664461,"results":"32","hashOfConfig":"18"},{"size":2986,"mtime":1613727351111,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"zm6leg",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\index.js",[],["71","72"],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\reportWebVitals.js",[],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\App.js",[],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\layout\\Navbar\\Navbar.js",["73"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport profile from './profile.png';\r\nimport loanimg from './loan.jfif';\r\n\r\nconst Navbar = () => {\r\n\r\n   \r\n    return (\r\n        <nav className=\"navbar p-2 shadow navbar-dark navbar-expand-sm\" style={{backgroundColor:'#5161ce'}}>\r\n            <div className=\"navbar-brand\">\r\n               <Link to=\"/\"> <img className =\"ml-3 rounded-circle\" src={loanimg} width=\"45\" height=\"45\" alt=\"logo\"/></Link>\r\n               <span className=\"ml-2 h4\"> Loan Management system</span>\r\n            </div>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbar-list-4\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbar-list-4\">\r\n                <ul className=\"navbar-nav ml-auto \">\r\n                    <li className=\"nav-item dropdown\">\r\n                        <a className=\"nav-link dropdown-toggle\"  role=\"button\" data-toggle=\"dropdown\" >\r\n                            <img src={profile} width=\"40\" height=\"40\" className=\"rounded-circle\" alt=\"profile\" />\r\n                           <span className=\"h6 text-light p-1 font-weight-normal\"> Vivek Thakare</span>\r\n                        </a>\r\n                        <div className=\"dropdown-menu\" >\r\n                            <Link to=\"/\" className=\"dropdown-item\">Dashboard</Link>\r\n                            <Link to=\"/profile\" className=\"dropdown-item\">Edit Profile</Link>\r\n                            <Link to=\"/logout\" className=\"dropdown-item\">Log Out</Link>\r\n                        </div>\r\n                    </li>   \r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\layout\\Footer.js",[],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\Profile\\Profile.js",[],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\layout\\Dashboard\\AdminDash.js",["74","75"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Spinner from '../Spinner';\r\nimport AdminChart from '../../AdminChart';\r\nimport LoanChart from '../../LoanChart';\r\nimport TenureChart from '../../TenureChart';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalendarAlt, faEnvelope, faUser, faVenusMars, faLandmark, faMobileAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst AdminDash = () => {\r\n\r\n    const [userList, setUserList] = useState(null);\r\n    const [loanChart, setLoanChart] = useState(null);\r\n    const [status, setStatus] = useState(false);\r\n    const [modalData, setModalData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const getAllUsers = async () => {\r\n            try {\r\n                const res = await axios.get('/getUsers');\r\n                // console.log(res.data)\r\n                setUserList(res.data.users);\r\n                setLoanChart(res.data.loan_summary);\r\n                setStatus(true);\r\n            } catch (err) {\r\n                console.log(\"AdminDash\", err);\r\n            }\r\n        }\r\n        getAllUsers();\r\n    }, []);\r\n\r\n    const createTable = (user, index) => {\r\n        if (user) {\r\n            const { user_id, first_name, last_name, total_loan, paid_loan } = user;\r\n            const remaining_loan = total_loan - paid_loan;\r\n            return (\r\n                <tr key={index}>\r\n                    <td className=\"text-justify\">{user_id}</td>\r\n                    <td className=\"text-justify\">{first_name}{last_name}</td>\r\n                    <td className=\"text-justify\">Rs. {parseInt(remaining_loan) + parseInt(paid_loan)}</td>\r\n                    <td className=\"text-justify\">Rs. {paid_loan}</td>\r\n                    <td className=\"text-justify\">Rs. {remaining_loan}</td>\r\n\r\n                    <td className=\"d-flex \">\r\n                        <button type=\"button\" className=\"container ml-2 btn btn-outline-info\"\r\n                            onClick={() => setModalData(user)}\r\n                            data-toggle=\"modal\"\r\n                            data-target=\"#user\"\r\n                        >\r\n                            View Chart\r\n                    </button>\r\n                        <button className=\"container ml-2 btn btn-outline-success\" >Close Loan</button>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    const displayModal = () => {\r\n        if (modalData) {\r\n            console.log(\"display modal\", modalData);\r\n            const { paid_loan, total_loan, tenure_completed, loan_tenure,\r\n                first_name, user_id, last_name, email, mobile, loan_type, issue_date } = modalData;\r\n            const tenure_remaining = loan_tenure - tenure_completed;\r\n            const remaining_loan = total_loan - paid_loan;\r\n            const loan = {\r\n                paid: parseInt(paid_loan),\r\n                remaining: parseInt(remaining_loan)\r\n            }\r\n\r\n            const tenure = {\r\n                completed: parseInt(tenure_completed),\r\n                remaining: parseInt(tenure_remaining)\r\n            }\r\n\r\n\r\n            return (\r\n                <div className=\"modal animate__animated animate__fadeIn\" id=\"user\">\r\n                    <div className=\"modal-dialog modal-lg modal-dialog-centered\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header text-light\" style={{ backgroundColor: \"#5161ce\" }}>\r\n                                <p className=\"modal-title h4\">Details</p>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\r\n                                    <span className=\"h4 text-light p-2\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <div className=\"row border ml-1 mr-1 px-2 rounded\">\r\n                                    <div className=\"col-sm-3\">\r\n                                        <p className=\"card-text text-justify text-center font-weight-normal h4 mt-4 pt-2\">{first_name} {last_name}</p>\r\n                                    </div>\r\n                                    <div className=\"col-sm\">\r\n                                        <table className=\"table table-borderless\">\r\n                                            <tbody>\r\n                                                <tr>\r\n                                                    <td className=\"text-left\">\r\n                                                        <FontAwesomeIcon icon={faEnvelope} className=\"text-info \" />\r\n                                                        <b> Email</b> :- {email}\r\n                                                    </td>\r\n                                                    <td className=\"text-left\">\r\n                                                        <FontAwesomeIcon icon={faMobileAlt} className=\"text-info \" />\r\n                                                        <b> Mobile</b> :- {mobile}\r\n                                                    </td>\r\n\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td className=\"text-left\">\r\n                                                        <FontAwesomeIcon icon={faLandmark} className=\"text-info\" />\r\n                                                        <b> Loan Type </b> :- {loan_type}\r\n                                                    </td>\r\n                                                    <td className=\"text-left\">\r\n                                                        <FontAwesomeIcon icon={faCalendarAlt} className=\"text-info\" />\r\n                                                        <b> Issue Date</b> :- {issue_date.slice(5, 16)}\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row mt-3\">\r\n                                    <div className=\"col-sm-5 mx-auto\">\r\n                                        <LoanChart key={user_id} loan={loan} />\r\n                                    </div>\r\n                                    <div className=\"col-sm-5 mx-auto\">\r\n                                        <TenureChart key={user_id} tenure={tenure} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    if (status) {\r\n        return (\r\n            <div>\r\n                <div className=\"container-fluid mt-4\">\r\n                    <div className=\"row mt-2 \">\r\n                        <div className=\"col-sm-3 mb-2\">\r\n                            <AdminChart loan={loanChart} />\r\n                        </div>\r\n                        <div className=\"col-sm-9 mb-2\">\r\n                            <div className=\"container-fluid\">\r\n                                <table className=\"table mt-2 shadow table-striped bg-light animate__animated animate__fadeIn\">\r\n                                    <thead className=\"text-left text-light\" style={{ backgroundColor: \"#5161ce\" }}>\r\n                                        <tr>\r\n                                            <th className=\"h6\">ID</th>\r\n                                            <th className=\"h6\">Name</th>\r\n                                            <th className=\"h6\">Loan Amount</th>\r\n                                            <th className=\"h6\">Loan Paid</th>\r\n                                            <th className=\"h6\">Loan Remaining</th>\r\n                                            <th className=\"h6 text-center\">Action</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {userList.map(createTable)}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {displayModal()}\r\n            </div>\r\n        );\r\n    } else {\r\n        console.log(\"else\", \"loading\");\r\n        return (\r\n            <Spinner />\r\n        );\r\n    }\r\n}\r\n\r\nexport default AdminDash;","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\LoanForm.js",[],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\layout\\Dashboard\\UserDash.js",["76"],"import React, { useEffect, useState } from 'react';\r\nimport LoanChart from '../../LoanChart';\r\nimport axios from 'axios';\r\nimport TenureChart from '../../TenureChart';\r\nimport Spinner from '../Spinner';\r\nimport Details from '../../Details/Details';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst UserDash = () => {\r\n\r\n    const [userDetails, setUserDetails] = useState({});\r\n    const [loaded, setLoaded] = useState(false);\r\n    const [loanType, setLoanType] = useState(null);\r\n\r\n    useEffect(() => {\r\n        console.log(\"useEffect\", loanType);\r\n        const getDetails = async (id) => {\r\n            try {\r\n                const params = { \"id\": id, \"loantype\": loanType };\r\n                const res = await axios.get(`/getUserDetails/`, { params: params });\r\n                setUserDetails(res.data.data);\r\n                setLoaded(true);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        getDetails(1);\r\n\r\n    }, [loanType]);\r\n\r\n    const DisplayResults = () => {\r\n        if (loaded) {\r\n            const { paid_loan, total_loan, loan_tenure, tenure_completed } = userDetails;\r\n            const loan = {\r\n                paid: parseInt(paid_loan),\r\n                remaining: parseInt(total_loan) - parseInt(paid_loan)\r\n            }\r\n            const tenure = {\r\n                completed: parseInt(tenure_completed),\r\n                remaining: parseInt(loan_tenure) - parseInt(tenure_completed)\r\n            }\r\n            return (\r\n                <div>\r\n                    <div className=\"container-fluid \">\r\n                        <div className=\"row mt-2 \">\r\n                            <div className=\"col-sm-3 mb-2\">\r\n                                <LoanChart loan={loan} />\r\n                            </div>\r\n                            <div className=\"col-sm-6 mb-2\">\r\n                                <Details userDetails={userDetails} />\r\n                            </div>\r\n                            <div className=\"col-sm-3\">\r\n                                <TenureChart tenure={tenure} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            console.log(\"else\", \"loading\");\r\n            return (\r\n                <Spinner />\r\n            );\r\n        }\r\n    }\r\n   \r\n\r\n    const handleChange = (e) => {\r\n        setLoanType(e.target.value);\r\n        setLoaded(false);\r\n    }\r\n\r\n    const nextDate = () => {\r\n        let d = new Date();\r\n        console.log(d);\r\n        let d2 = new Date(d.getFullYear(), d.getMonth(), d.getDate() + 30);\r\n        console.log(d2.toLocaleDateString());\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row container-fluid\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"ml-auto\">\r\n                        <Link to=\"/newloan\">\r\n                            <button className=\"btn w-50 btn-block btn-outline-info mt-4\">Apply for new Loan</button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"w-50 ml-auto mt-4\">\r\n                        <div className=\"form-group\">\r\n                            <select className=\"form-control\" onChange={(e) => { handleChange(e) }} name=\"loanType\">\r\n                                <option >House Loan</option>\r\n                                <option>Car Loan</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <DisplayResults />\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default UserDash;","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\Profile\\UpdateProfile.js",[],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\layout\\Spinner.js",[],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\TenureChart.js",[],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\AdminChart.js",[],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\LoanChart.js",[],"C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\Details\\Details.js",["77","78","79","80"],"import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Payment from \"./Payment\";\r\n\r\nconst tableStyle = {\r\n  borderCollapse: \"separate\",\r\n  borderSpacing: \"0 10px\",\r\n};\r\n\r\nconst Details = (props) => {\r\n  const[toggled, setToggled] = useState(false);\r\n\r\n  const {total_loan,paid_loan,loan_tenure,tenure_completed,installment_due_date,installment_amt} = props.userDetails;\r\n  const tenure_remaining= loan_tenure-tenure_completed;\r\n  const remaining_loan=total_loan-paid_loan;\r\n\r\n\r\n  const Pay = () => {\r\n    const { installment_amt, installment_due_date,user_id,loan_id } = props.userDetails;\r\n    const payment_data= { installment_amt, installment_due_date,user_id,loan_id }\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"card shadow-sm\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"card-header h6 rounded text-white\"\r\n                        style={{ backgroundColor: \"#76b900\" }}>\r\n                        Current Installment\r\n                    </div>\r\n                    <hr></hr>\r\n                    <p className=\"card-text my-2\">Amount : Rs. {installment_amt} </p>\r\n                    <p className=\"card-text\">Due Date: {installment_due_date} </p>\r\n                    \r\n                    <Link to={{pathname:'/payment',payment_data:payment_data}}  className=\"btn btn-primary mt-1\" >Pay Now</Link>\r\n                    \r\n                </div>\r\n            </div>\r\n            <div className=\"container mt-4\">\r\n                <button className=\"btn btn-outline-success btn-block \">Close Loan</button>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"card  shadow \">\r\n      <div className=\"card-body\">\r\n        <div\r\n          className=\"card-header shadow h5 rounded text-white\"\r\n          style={{ backgroundColor: \"#e66220\" }}\r\n        >\r\n          Details\r\n        </div>\r\n        <table className=\" mt-3 table container table-responsive\" style={tableStyle}>\r\n          <tbody className=\"text-left h6 table-bordered font-weight-normal\">\r\n            <tr>\r\n              <td className=\"font-weight-bold\">Loan (in Rs.)</td>\r\n              <td>Loan Amount : {parseInt(remaining_loan) + parseInt(paid_loan)}</td>\r\n              <td>Paid : {paid_loan}</td>\r\n              <td>Remaining : {remaining_loan}</td>\r\n              \r\n            </tr>\r\n            <tr>\r\n              <td className=\"font-weight-bold\">Tenure (in years)</td>\r\n              <td>Total : {parseInt(tenure_completed) + parseInt(tenure_remaining)}</td>\r\n              <td>Completed : {tenure_completed} </td>\r\n              <td>Remaining : {tenure_remaining} </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-7\">\r\n            <div className=\"card shadow-sm\">\r\n\r\n              <div className=\"card-body\">\r\n                <div className=\"card-header h6 rounded text-white\"\r\n                  style={{ backgroundColor: \"#5161ce\" }}>\r\n                  Transaction History\r\n              </div>\r\n                <table className=\"table \">\r\n                  <thead>\r\n                    <tr>\r\n                      <th scope=\"col\">Id</th>\r\n                      {/* <th scope=\"col\">Note</th> */}\r\n                      <th scope=\"col\">Amount</th>\r\n                      <th scope=\"col\">Date</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <th scope=\"row\">1</th>\r\n                      <td>Rs. 5000</td>\r\n                      <td>3/4/2020</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">2</th>\r\n                      <td>Rs. 1300</td>\r\n                      <td>2/6/2020</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <th scope=\"row\">3</th>\r\n                      <td>Rs. 4000</td>\r\n                      <td>12/9/2020</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm\">\r\n            <Pay/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {toggled ? <Redirect to=\"/\"/>\r\n               : null}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nexport default Details;\r\n","C:\\Users\\Patil_vis\\laj\\react\\git-loan-management\\loan-management-react\\src\\Components\\Details\\Payment.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":21,"column":25,"nodeType":"87","endLine":21,"endColumn":104},{"ruleId":"88","severity":1,"message":"89","line":9,"column":37,"nodeType":"90","messageId":"91","endLine":9,"endColumn":43},{"ruleId":"88","severity":1,"message":"92","line":9,"column":45,"nodeType":"90","messageId":"91","endLine":9,"endColumn":56},{"ruleId":"88","severity":1,"message":"93","line":73,"column":11,"nodeType":"90","messageId":"91","endLine":73,"endColumn":19},{"ruleId":"88","severity":1,"message":"94","line":3,"column":8,"nodeType":"90","messageId":"91","endLine":3,"endColumn":15},{"ruleId":"88","severity":1,"message":"95","line":11,"column":18,"nodeType":"90","messageId":"91","endLine":11,"endColumn":28},{"ruleId":"88","severity":1,"message":"96","line":13,"column":60,"nodeType":"90","messageId":"91","endLine":13,"endColumn":80},{"ruleId":"88","severity":1,"message":"97","line":13,"column":81,"nodeType":"90","messageId":"91","endLine":13,"endColumn":96},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'faUser' is defined but never used.","Identifier","unusedVar","'faVenusMars' is defined but never used.","'nextDate' is assigned a value but never used.","'Payment' is defined but never used.","'setToggled' is assigned a value but never used.","'installment_due_date' is assigned a value but never used.","'installment_amt' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]