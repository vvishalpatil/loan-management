[{"C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\index.js":"1","C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\App.js":"2","C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\reportWebVitals.js":"3","C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\layout\\Dashboard\\UserDash.js":"4","C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\layout\\Footer.js":"5","C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\LoanForm.js":"6","C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\Profile\\Profile.js":"7","C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\Details\\Payment.js":"8","C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\layout\\Navbar\\Navbar.js":"9","C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\layout\\Dashboard\\AdminDash.js":"10","C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\layout\\Spinner.js":"11","C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\Details\\Details.js":"12","C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\LoanChart.js":"13","C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\TenureChart.js":"14","C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\Profile\\UpdateProfile.js":"15","C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\AdminChart.js":"16","C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\TransactionStatusChart.js":"17"},{"size":637,"mtime":1612781807943,"results":"18","hashOfConfig":"19"},{"size":1017,"mtime":1614315739903,"results":"20","hashOfConfig":"19"},{"size":375,"mtime":1612781807944,"results":"21","hashOfConfig":"19"},{"size":5151,"mtime":1614677572124,"results":"22","hashOfConfig":"19"},{"size":434,"mtime":1613548113530,"results":"23","hashOfConfig":"19"},{"size":4322,"mtime":1614664663143,"results":"24","hashOfConfig":"19"},{"size":3266,"mtime":1614664689763,"results":"25","hashOfConfig":"19"},{"size":2886,"mtime":1614679313872,"results":"26","hashOfConfig":"19"},{"size":1877,"mtime":1614665309659,"results":"27","hashOfConfig":"19"},{"size":16562,"mtime":1614590709016,"results":"28","hashOfConfig":"19"},{"size":326,"mtime":1612781807926,"results":"29","hashOfConfig":"19"},{"size":7575,"mtime":1614679059976,"results":"30","hashOfConfig":"19"},{"size":2116,"mtime":1614313872392,"results":"31","hashOfConfig":"19"},{"size":2442,"mtime":1614313881948,"results":"32","hashOfConfig":"19"},{"size":6606,"mtime":1614664714899,"results":"33","hashOfConfig":"19"},{"size":2933,"mtime":1614247170932,"results":"34","hashOfConfig":"19"},{"size":4795,"mtime":1614592982005,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"a7xw99",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},"C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\index.js",[],["75","76"],"C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\App.js",[],"C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\reportWebVitals.js",[],"C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\layout\\Dashboard\\UserDash.js",["77","78","79","80"],"C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\layout\\Footer.js",[],"C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\LoanForm.js",[],"C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\Profile\\Profile.js",[],"C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\Details\\Payment.js",["81"],"C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\layout\\Navbar\\Navbar.js",["82"],"C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\layout\\Dashboard\\AdminDash.js",["83","84","85","86","87"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Spinner from \"../Spinner\";\r\nimport AdminChart from \"../../AdminChart\";\r\nimport LoanChart from \"../../LoanChart\";\r\nimport TenureChart from \"../../TenureChart\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCalendarAlt,\r\n  faEnvelope,\r\n  faLandmark,\r\n  faMobileAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport TransactioStatusChart from \"../../TransactionStatusChart\";\r\n\r\nconst AdminDash = () => {\r\n  const [loanType, setLoanType] = useState(null);\r\n  const [loanOptions, setLoanOptions] = useState(null);\r\n  const [loaded, setLoaded] = useState(false);\r\n  const [loanChart, setLoanChart] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getLoanOptions = async () => {\r\n      try {\r\n        const res = await axios.get(\"/getAppliedLoanOptions\");\r\n        setLoanOptions(res.data.options);\r\n        setLoanChart(res.data.loan_summary);\r\n        setLoanType(res.data.options[0]);\r\n        setLoaded(true);\r\n \r\n        // console.log(d);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getLoanOptions();\r\n  }, []);\r\n\r\n  const [userList, setUserList] = useState(null);\r\n\r\n  const [status, setStatus] = useState(false);\r\n  const [modalData, setModalData] = useState(null);\r\n  const [searchType, setSearchType] = useState(\"Search By\");\r\n  const [searchData, setSearchData] = useState('');\r\n  const [searchData1, setSearchData1] = useState(null);\r\n  const [tableData, setTableData] = useState(null);\r\n  const [searchStatus, setSearchStatus] = useState(true);\r\n  const [comparator, setComparator] = useState(\"=\");\r\n\r\n  useEffect(() => {\r\n    const getAllUsers = async () => {\r\n      try {\r\n        if (loanType) {\r\n          const res = await axios.get(\"/getUsers/\", {\r\n            params: { loantype: loanType },\r\n          });\r\n          setUserList(res.data.users);\r\n          setTableData(res.data.users);\r\n          setStatus(true);\r\n        }\r\n      } catch (err) {\r\n        console.log(\"AdminDash\", err);\r\n      }\r\n    };\r\n    getAllUsers();\r\n  }, [loanType]);\r\n\r\n  const createTable = (user, index) => {\r\n    if (user) {\r\n      const { user_id, first_name, last_name, total_loan, paid_loan } = user;\r\n      const remaining_loan = total_loan - paid_loan;\r\n      return (\r\n        <tr key={index}>\r\n          <td className=\"text-justify\">{user_id}</td>\r\n          <td className=\"text-justify\">\r\n            {first_name} {last_name}\r\n          </td>\r\n          <td className=\"text-justify\">\r\n            <CurrencyFormat\r\n              value={parseInt(remaining_loan) + parseInt(paid_loan)}\r\n              displayType={\"text\"}\r\n              thousandSeparator={true}\r\n              prefix={\"Rs. \"}\r\n            />\r\n          </td>\r\n          <td className=\"text-justify\">\r\n            {\" \"}\r\n            <CurrencyFormat\r\n              value={paid_loan}\r\n              displayType={\"text\"}\r\n              thousandSeparator={true}\r\n              prefix={\"Rs. \"}\r\n            />\r\n          </td>\r\n          <td className=\"text-justify\">\r\n            <CurrencyFormat\r\n              value={remaining_loan}\r\n              displayType={\"text\"}\r\n              thousandSeparator={true}\r\n              prefix={\"Rs. \"}\r\n            />\r\n          </td>\r\n\r\n          <td className=\"d-flex \">\r\n            <button\r\n              type=\"button\"\r\n              className=\"container ml-2 btn btn-outline-info\"\r\n              onClick={() => setModalData(user)}\r\n              data-toggle=\"modal\"\r\n              data-target=\"#user\"\r\n            >\r\n              View Chart\r\n            </button>\r\n            <button className=\"container ml-2 btn btn-outline-success\">\r\n              Close Loan\r\n            </button>\r\n          </td>\r\n        </tr>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const displayModal = () => {\r\n    if (modalData) {\r\n      console.log(\"display modal\", modalData);\r\n      const {\r\n        paid_loan,\r\n        total_loan,\r\n        tenure_completed,\r\n        loan_tenure,\r\n        first_name,\r\n        user_id,\r\n        last_name,\r\n        email,\r\n        mobile,\r\n        loan_type,\r\n        issue_date,\r\n        loan_id,\r\n      } = modalData;\r\n      const tenure_remaining = loan_tenure - tenure_completed;\r\n      const remaining_loan = total_loan - paid_loan;\r\n      const loan = {\r\n        paid: parseInt(paid_loan),\r\n        remaining: parseInt(remaining_loan),\r\n      };\r\n\r\n      const tenure = {\r\n        completed: parseInt(tenure_completed),\r\n        remaining: parseInt(tenure_remaining),\r\n      };\r\n\r\n      return (\r\n        <div\r\n          key={loan_id}\r\n          className=\"modal animate__animated animate__fadeIn\"\r\n          id=\"user\"\r\n        >\r\n          <div className=\"modal-dialog modal-lg modal-dialog-centered\">\r\n            <div className=\"modal-content\">\r\n              <div\r\n                className=\"modal-header text-light\"\r\n                style={{ backgroundColor: \"#5161ce\" }}\r\n              >\r\n                <p className=\"modal-title h4\">Details</p>\r\n                <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\r\n                  <span className=\"h4 text-light p-2\">&times;</span>\r\n                </button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <div className=\"row border ml-1 mr-1 px-2 rounded\">\r\n                  <div className=\"col-sm-3\">\r\n                    <p className=\"card-text text-justify text-center font-weight-normal h4 mt-4 pt-2\">\r\n                      {first_name} {last_name}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"col-sm\">\r\n                    <table className=\"table table-borderless\">\r\n                      <tbody>\r\n                        <tr>\r\n                          <td className=\"text-left\">\r\n                            <FontAwesomeIcon\r\n                              icon={faEnvelope}\r\n                              className=\"text-info \"\r\n                            />\r\n                            <b> Email</b> :- {email}\r\n                          </td>\r\n                          <td className=\"text-left\">\r\n                            <FontAwesomeIcon\r\n                              icon={faMobileAlt}\r\n                              className=\"text-info \"\r\n                            />\r\n                            <b> Mobile</b> :- {mobile}\r\n                          </td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td className=\"text-left\">\r\n                            <FontAwesomeIcon\r\n                              icon={faLandmark}\r\n                              className=\"text-info\"\r\n                            />\r\n                            <b> Loan Type </b> :- {loan_type}\r\n                          </td>\r\n                          <td className=\"text-left\">\r\n                            <FontAwesomeIcon\r\n                              icon={faCalendarAlt}\r\n                              className=\"text-info\"\r\n                            />\r\n                            <b> Issue Date</b> :- {issue_date.slice(5, 16)}\r\n                          </td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row mt-3\">\r\n                  <div className=\"col-sm-5 mx-auto\">\r\n                    <LoanChart key={user_id} loan={loan} />\r\n                  </div>\r\n                  <div className=\"col-sm-5 mx-auto\">\r\n                    <TenureChart key={user_id} tenure={tenure} />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const handleSearch = async () => {\r\n    try {\r\n      const params = {\r\n        search_type: searchType,\r\n        search_key: searchData,\r\n        comparator: comparator,\r\n        search_key1: searchData1,\r\n        loantype: loanType,\r\n      };\r\n      const res = await axios.get(\"/filterSearch/\", { params: params });\r\n      console.log(res.data);\r\n      if (res.data.data != \"null\") {\r\n        setTableData(res.data.data);\r\n      } else {\r\n        setSearchStatus(false);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleSearchClear = () => {\r\n    setTableData(userList);\r\n    setSearchStatus(true);\r\n    setSearchType(\"Search By\");\r\n    setSearchData(\"\");\r\n  };\r\n\r\n  const handleOnChange = (e) => {\r\n    setSearchData(e.target.value);\r\n    console.log(e);\r\n  };\r\n\r\n  if (loaded) {\r\n    return (\r\n      <div>\r\n        <div className=\"container-fluid mt-4\">\r\n          <div className=\"row mt-2 \">\r\n            <div className=\"col-sm-3 mb-2\">\r\n\r\n              <ul className=\"nav nav-tabs \" role=\"tablist\">\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link active\" data-toggle=\"pill\" href=\"#home\">Loan</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link\" data-toggle=\"pill\" href=\"#menu1\">Transaction</a>\r\n                </li>\r\n                {/* <li class=\"nav-item\">\r\n                  <a class=\"nav-link\" data-toggle=\"pill\" href=\"#menu2\">Menu 2</a>\r\n                </li> */}\r\n              </ul>\r\n              <div className=\"tab-content\">\r\n                <div id=\"home\" className=\" tab-pane active\"><br />\r\n                  <AdminChart loan={loanChart} />\r\n                </div>\r\n                <div id=\"menu1\" className=\" tab-pane fade\"><br />\r\n                  <TransactioStatusChart ></TransactioStatusChart>    </div>\r\n                {/* <div id=\"menu2\" class=\" tab-pane fade\"><br />\r\n                  <h3>Menu 2</h3>\r\n                  <p>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam.</p>\r\n                </div> */}\r\n              </div>\r\n            </div>\r\n            <div className=\"col-sm-9 mb-2\">\r\n              <div className=\"row container-fluid\">\r\n                <div className=\"col-sm-4\">\r\n                  <div className=\"form-group\">\r\n                    <select\r\n                      className=\"form-control shadow-sm\"\r\n                      onChange={(e) => {\r\n                        setLoanType(e.target.value);\r\n                      }}\r\n                      name=\"loanType\"\r\n                    >\r\n                      {loanOptions\r\n                        ? loanOptions.map((option, index) => (\r\n                          <option\r\n                            className=\"h6 text-success\"\r\n                            key={index}\r\n                            value={option}\r\n                          >\r\n                            {option}\r\n                          </option>\r\n                        ))\r\n                        : null}\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-sm-8\"></div>\r\n              </div>\r\n              {status ? (\r\n                <div className=\"container-fluid mt-3\">\r\n                  {/* <div class=\"container\"> */}\r\n                  <div className=\"form-inline\">\r\n                    <div className=\"form-group\">\r\n                      <select\r\n                        onChange={(e) => setSearchType(e.target.value)}\r\n                        className=\"form-control w-100\"\r\n                        id=\"sel1\"\r\n                        value={searchType}\r\n                        name=\"search_type\"\r\n                      >\r\n                        <option>Search By</option>\r\n                        <option>User Id</option>\r\n                        <option>Name</option>\r\n                        <option>Date Issued</option>\r\n                        <option>Date Issued (Range)</option>\r\n                        <option>Loan Amount</option>\r\n                        <option>Loan Paid</option>\r\n                        <option>Loan Remaining</option>\r\n                        <option>Tenure</option>\r\n                        <option>Tenure remaining</option>\r\n                        <option>Tenure completed</option>\r\n                      </select>\r\n                    </div>\r\n                    {searchType === \"Name\" ||\r\n                      searchType === \"Search By\" ||\r\n                      searchType === \"User Id\" ||\r\n                      searchType == \"Date Issued (Range)\" ||\r\n                      searchType === null ? null : (\r\n                        <div className=\"form-group\">\r\n                          <select\r\n                            onChange={(e) => setComparator(e.target.value)}\r\n                            className=\"form-control w-100 mx-2\"\r\n                            id=\"sel1\"\r\n                            name=\"search_type\"\r\n                          >\r\n                            <option defaultValue> = </option>\r\n                            <option> &gt; </option>\r\n                            <option> &lt; </option>\r\n                          </select>\r\n                        </div>\r\n                      )}\r\n                    {searchType == \"Date Issued (Range)\" ? (\r\n                      <React.Fragment>\r\n                        <label className=\"pl-3\">From</label>\r\n                        <input\r\n                          className=\"form-control mx-2 w-25\"\r\n                          onChange={(e) => setSearchData(e.target.value)}\r\n                          type=\"date\"\r\n                          name=\"search_key\"\r\n                          placeholder=\"Search\"\r\n                        />\r\n                        <label>To</label>\r\n                        <input\r\n                          className=\"form-control mx-2 w-25\"\r\n                          onChange={(e) => setSearchData1(e.target.value)}\r\n                          type=\"date\"\r\n                          name=\"search_key\"\r\n                          placeholder=\"Search\"\r\n                        />\r\n                      </React.Fragment>\r\n                    ) : (\r\n                        <input\r\n                          className=\"form-control mx-2 w-25\"\r\n                          onChange={(e) => setSearchData(e.target.value)}\r\n                          type={searchType == \"Date Issued\" ? \"date\" : \"text\"}\r\n                          name=\"search_key\"\r\n                          value={searchData}\r\n                          placeholder=\"Search\"\r\n                        />\r\n                      )}\r\n\r\n                    <button\r\n                      onClick={(e) => handleSearch(e)}\r\n                      className=\"btn btn-success mx-2\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Search\r\n                    </button>\r\n                    <button\r\n                      onClick={() => handleSearchClear()}\r\n                      className=\"btn btn-success mx-2\"\r\n                    >\r\n                      Clear\r\n                    </button>\r\n                    <br />\r\n                  </div>\r\n                  {/* </div> */}\r\n                  <table className=\"table mt-3 shadow table-striped table-responsive-sm bg-light animate__animated animate__fadeIn\">\r\n                    <thead\r\n                      className=\"text-left text-light\"\r\n                      style={{ backgroundColor: \"#5161ce\" }}\r\n                    >\r\n                      <tr>\r\n                        <th className=\"h6\">ID</th>\r\n                        <th className=\"h6\">Name</th>\r\n                        <th className=\"h6\">Loan Amount</th>\r\n                        <th className=\"h6\">Loan Paid</th>\r\n                        <th className=\"h6\">Loan Remaining</th>\r\n                        <th className=\"h6 text-center\">Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {searchStatus ? (\r\n                        tableData.map(createTable)\r\n                      ) : (\r\n                          <tr>\r\n                            <td colSpan=\"6\" className=\"text-info h5\">\r\n                              No Records found\r\n                          </td>\r\n                          </tr>\r\n                        )}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {displayModal()}\r\n      </div>\r\n    );\r\n  } else {\r\n    return <Spinner />;\r\n  }\r\n};\r\n\r\nexport default AdminDash;\r\n","C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\layout\\Spinner.js",[],"C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\Details\\Details.js",["88","89","90","91","92","93","94","95","96"],"C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\LoanChart.js",[],"C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\TenureChart.js",["97","98"],"import React, { Component } from \"react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\nexport default class TenureChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { completed, remaining } = this.props.tenure;\r\n    this.state = {\r\n      totalTenure: completed + remaining,\r\n      chartData: {\r\n        labels: [\"Remaining\", \"Completed\"],\r\n        datasets: [\r\n          {\r\n            backgroundColor: [\"rgb(59, 120, 156)\", \"rgb(138, 83, 163)\"],\r\n            borderColor: \"white\",\r\n            // hoverBorderColor : 'slateblue',\r\n            // hoverBackgroundColor : 'gold',\r\n            data: [remaining, completed],\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        cutoutPercentage: 60,\r\n        responsive: true,\r\n        animation: {\r\n          animateRotate: true,\r\n          //  duration : 2000\r\n        },\r\n        legend: {\r\n          // display:false\r\n          labels: {\r\n            // boxWidth : 10\r\n            fontSize: 15,\r\n            fontColor: \"#5161ce\",\r\n          },\r\n        },\r\n        layout: {\r\n          padding: 5,\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  formatTenure() {\r\n    let year = parseInt(this.state.totalTenure / 12);\r\n    let month = this.state.totalTenure % 12;\r\n    if (year < 1) {\r\n      return <span>{month} mths.</span>;\r\n    } else if (year == 1) {\r\n      if (month == 0) {\r\n        return <span>{year} yr.</span>;\r\n      } else {\r\n        return (\r\n          <span>\r\n            {year} yr {month} mths.\r\n          </span>\r\n        );\r\n      }\r\n    } else {\r\n      return (\r\n        <span>\r\n          {year} yrs {month} mths.\r\n        </span>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card rounded shadow animate__animated animate__pulse\">\r\n        <div className=\"card-body\">\r\n          <div\r\n            className=\"card-header shadow h5 rounded text-white\"\r\n            style={{ backgroundColor: \"#76b900\" }}\r\n          >\r\n            Tenure Summary\r\n          </div>\r\n          <hr className=\"w-75\" style={{ borderTop: \"2px solid green\" }} />\r\n          <Doughnut\r\n            data={this.state.chartData}\r\n            options={this.state.options}\r\n            height={43}\r\n            width={50}\r\n          />\r\n          <hr />\r\n          <div className=\"card-text text-center mt-3 h6 \">\r\n            {\" \"}\r\n            Period : {this.formatTenure()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\Profile\\UpdateProfile.js",[],"C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\AdminChart.js",["99","100"],"import React, { Component } from \"react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\n\r\nexport default class AdminChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { total_recovered, total_distributed, tenure } = this.props.loan;\r\n    this.state = {\r\n      total: total_recovered + total_distributed,\r\n      tenure: tenure,\r\n      chartData: {\r\n        labels: [\"Loan Remaining\", \"Loan Recovered\"],\r\n        datasets: [\r\n          {\r\n            backgroundColor: [\"rgb(59, 120, 156)\", \"#76b900\"],\r\n            borderColor: \"white\",\r\n            // hoverBorderColor : 'slateblue',\r\n            // hoverBackgroundColor : 'gold',\r\n            data: [total_distributed, total_recovered],\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        cutoutPercentage: 0,\r\n        responsive: true,\r\n        animation: {\r\n          animateRotate: true,\r\n          //  duration : 2000\r\n        },\r\n        legend: {\r\n          // display:false\r\n          labels: {\r\n            // boxWidth : 10\r\n            fontSize: 15,\r\n            fontColor: \"#5161ce\",\r\n          },\r\n        },\r\n        layout: {\r\n          padding: 1,\r\n        },\r\n      },\r\n    };\r\n  }\r\n\r\n  formatTenure() {\r\n    let year = parseInt(this.state.tenure / 12);\r\n    let month = this.state.tenure % 12;\r\n    console.log(month, year);\r\n    if (year < 1) {\r\n      return <span>{month} mths.</span>;\r\n    } else if (year == 1) {\r\n      if (month == 0) {\r\n        return <span>{year} yr.</span>;\r\n      } else {\r\n        return (\r\n          <span>\r\n            {year} yr {month} mths.\r\n          </span>\r\n        );\r\n      }\r\n    } else {\r\n      return (\r\n        <span>\r\n          {year} yrs {month} mths.\r\n        </span>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"card rounded shadow animate__animated animate__pulse\">\r\n        <div className=\"card-body\">\r\n          <div\r\n            className=\"card-header shadow h5 rounded text-white\"\r\n            style={{ backgroundColor: \"#5161ce\" }}\r\n          >\r\n            Loan Summary\r\n          </div>\r\n          <hr className=\"w-75\" style={{ borderTop: \"2px solid #5161ce\" }} />\r\n          <Doughnut\r\n            data={this.state.chartData}\r\n            options={this.state.options}\r\n            height={35}\r\n            width={40}\r\n          />\r\n          <hr />\r\n          <div className=\"card-text text-center mt-3 h6 \">\r\n            {\" \"}\r\n            Loan Distributed :{\" \"}\r\n            <CurrencyFormat\r\n              value={this.state.total}\r\n              displayType={\"text\"}\r\n              thousandSeparator={true}\r\n              prefix={\"Rs. \"}\r\n            />\r\n          </div>\r\n          <div className=\"card-text text-center mt-4 h6 \">\r\n            {\" \"}\r\n            Estimated Recovery Time : <br/><br/> {this.formatTenure()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\thakare_v\\Desktop\\loan-management-react\\src\\Components\\TransactionStatusChart.js",["101","102","103","104"],"import React, { Component } from \"react\";\r\nimport { Bar, Doughnut } from \"react-chartjs-2\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport axios from \"axios\";\r\nimport { data } from \"jquery\";\r\n\r\nexport default class TransactioStatusChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(\"rendered\");\r\n    this.state = {\r\n      display: false,\r\n\r\n      chartData: {\r\n        labels: [\"Green\", \"Yellow\", \"Red\"],\r\n        datasets: [\r\n          {\r\n            backgroundColor: [\"green\", \"yellow\", \"red\"],\r\n            borderColor: \"white\",\r\n            // hoverBorderColor : 'slateblue',\r\n            // hoverBackgroundColor : 'gold',\r\n            data: [0, 0, 0],\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        scales: {\r\n          yAxes: [\r\n            {\r\n              ticks: {\r\n                min: 0,\r\n                max: 100,\r\n              },\r\n            },\r\n          ],\r\n        },\r\n\r\n        responsive: true,\r\n        animation: {\r\n          animateRotate: true,\r\n          //  duration : 2000\r\n        },\r\n        legend: {\r\n          display: false,\r\n          labels: {\r\n            // boxWidth : 10\r\n            fontSize: 15,\r\n            fontColor: \"#5161ce\",\r\n          },\r\n        },\r\n        layout: {\r\n          padding: 1,\r\n        },\r\n      },\r\n    };\r\n  }\r\n  fetchData = async (yearAndMonth) => {\r\n    const res = await axios.get(\"/getTransactionStatus/\", {\r\n      params: { data: yearAndMonth },\r\n    });\r\n    console.log(res.data.data, \"fetchdata\");\r\n\r\n    this.setState({\r\n      display: true,\r\n      chartData: {\r\n        labels: [\"Green\", \"Yellow\", \"Red\"],\r\n        datasets: [\r\n          {\r\n            backgroundColor: [\"#76b900\", \"#FFD300\", \"#FF0000\"],\r\n            borderColor: \"white\",\r\n            data: res.data.data,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        scales: {\r\n          yAxes: [\r\n            {\r\n              ticks: {\r\n                min: 0,\r\n                max: res.data.range + 1,\r\n                fontColor: \"slateblue\",\r\n                // lineHeight: 2.3\r\n              },\r\n            },\r\n          ],\r\n        },\r\n\r\n        responsive: true,\r\n        animation: {\r\n          animateRotate: true,\r\n          //  duration : 2000\r\n        },\r\n        legend: {\r\n          display: false,\r\n          labels: {\r\n            // boxWidth : 10\r\n            fontSize: 15,\r\n            fontColor: \"#5161ce\",\r\n          },\r\n        },\r\n        layout: {\r\n          padding: 1,\r\n        },\r\n      },\r\n    });\r\n\r\n    console.log(this.state, \"state in fetch data\");\r\n  };\r\n  componentDidMount() {\r\n    let d = new Date()\r\n    let dateStr = `${d.getFullYear()}-${d.getMonth() + 1}`;\r\n    console.log(d.getMonth(),\"month\");\r\n    this.fetchData(dateStr);\r\n  }\r\n  handleChange(e) {\r\n    console.log(e.target.value,\"onchange\");\r\n    \r\n    this.fetchData(e.target.value);\r\n  }\r\n\r\n  render() {\r\n    let d = new Date()\r\n    let dateStr = `${d.getFullYear()}-${d.getMonth() + 1}`;\r\n    if (this.state.display) {\r\n      return (\r\n        <div className=\"card rounded shadow animate__animated animate__pulse \">\r\n          <div className=\"card-body\">\r\n            <div\r\n              className=\"card-header shadow h5 rounded text-white\"\r\n              style={{ backgroundColor: \"#5161ce\" }}\r\n            >\r\n              Monthly Transaction Status\r\n            </div>\r\n\r\n            <hr\r\n              className=\"w-75 mb-4\"\r\n              style={{ borderTop: \"2px solid #5161ce\" }}\r\n            />\r\n            <div>\r\n              <form>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"month\"\r\n                    className=\"form-control\"\r\n                    id=\"exampleInputEmail1\"\r\n                    aria-describedby=\"emailHelp\"\r\n                    onChange={(e) => {\r\n                      this.handleChange(e);\r\n                    }}\r\n                  />\r\n                </div>\r\n              </form>\r\n            </div>\r\n            <Bar\r\n              data={this.state.chartData}\r\n              options={this.state.options}\r\n              height={35}\r\n              width={40}\r\n            />\r\n            <div className=\"text-left \">\r\n              <p className=\"text-center mt-2 shadow-sm card-header\">Color indicates payment status</p>\r\n              <br/>\r\n              <p className=\"card-text\"><span className=\"text-success h5\">&#9679;</span> before 15th day.</p>\r\n              <p className=\"card-text \"><span className=\"text-warning h5\">&#9679;</span> between 15th and due date.</p>\r\n              <p className=\"card-text\"><span className=\"text-danger h5\">&#9679;</span> past the due date.</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return \"loading\";\r\n    }\r\n  }\r\n}\r\n",{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":7,"column":16,"nodeType":"111","messageId":"112","endLine":7,"endColumn":25},{"ruleId":"113","severity":1,"message":"114","line":28,"column":6,"nodeType":"115","endLine":28,"endColumn":8,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":72,"column":38,"nodeType":"119","messageId":"120","endLine":72,"endColumn":40},{"ruleId":"109","severity":1,"message":"121","line":109,"column":9,"nodeType":"111","messageId":"112","endLine":109,"endColumn":17},{"ruleId":"109","severity":1,"message":"122","line":5,"column":8,"nodeType":"111","messageId":"112","endLine":5,"endColumn":19},{"ruleId":"123","severity":1,"message":"124","line":21,"column":25,"nodeType":"125","endLine":21,"endColumn":104},{"ruleId":"117","severity":1,"message":"126","line":248,"column":25,"nodeType":"119","messageId":"120","endLine":248,"endColumn":27},{"ruleId":"109","severity":1,"message":"127","line":265,"column":9,"nodeType":"111","messageId":"112","endLine":265,"endColumn":23},{"ruleId":"117","severity":1,"message":"118","line":355,"column":34,"nodeType":"119","messageId":"120","endLine":355,"endColumn":36},{"ruleId":"117","severity":1,"message":"118","line":370,"column":33,"nodeType":"119","messageId":"120","endLine":370,"endColumn":35},{"ruleId":"117","severity":1,"message":"118","line":393,"column":44,"nodeType":"119","messageId":"120","endLine":393,"endColumn":46},{"ruleId":"109","severity":1,"message":"128","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"129","line":2,"column":16,"nodeType":"111","messageId":"112","endLine":2,"endColumn":24},{"ruleId":"109","severity":1,"message":"130","line":3,"column":8,"nodeType":"111","messageId":"112","endLine":3,"endColumn":15},{"ruleId":"109","severity":1,"message":"131","line":6,"column":7,"nodeType":"111","messageId":"112","endLine":6,"endColumn":17},{"ruleId":"109","severity":1,"message":"132","line":17,"column":5,"nodeType":"111","messageId":"112","endLine":17,"endColumn":25},{"ruleId":"109","severity":1,"message":"133","line":18,"column":5,"nodeType":"111","messageId":"112","endLine":18,"endColumn":20},{"ruleId":"117","severity":1,"message":"118","line":92,"column":21,"nodeType":"119","messageId":"120","endLine":92,"endColumn":23},{"ruleId":"117","severity":1,"message":"118","line":93,"column":17,"nodeType":"119","messageId":"120","endLine":93,"endColumn":19},{"ruleId":"134","severity":1,"message":"135","line":112,"column":5,"nodeType":"136","messageId":"137","endLine":121,"endColumn":6},{"ruleId":"117","severity":1,"message":"118","line":49,"column":21,"nodeType":"119","messageId":"120","endLine":49,"endColumn":23},{"ruleId":"117","severity":1,"message":"118","line":50,"column":17,"nodeType":"119","messageId":"120","endLine":50,"endColumn":19},{"ruleId":"117","severity":1,"message":"118","line":52,"column":21,"nodeType":"119","messageId":"120","endLine":52,"endColumn":23},{"ruleId":"117","severity":1,"message":"118","line":53,"column":17,"nodeType":"119","messageId":"120","endLine":53,"endColumn":19},{"ruleId":"109","severity":1,"message":"138","line":2,"column":15,"nodeType":"111","messageId":"112","endLine":2,"endColumn":23},{"ruleId":"109","severity":1,"message":"139","line":3,"column":8,"nodeType":"111","messageId":"112","endLine":3,"endColumn":22},{"ruleId":"109","severity":1,"message":"140","line":5,"column":10,"nodeType":"111","messageId":"112","endLine":5,"endColumn":14},{"ruleId":"109","severity":1,"message":"141","line":124,"column":9,"nodeType":"111","messageId":"112","endLine":124,"endColumn":16},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loanOptions'. Either include it or remove the dependency array.","ArrayExpression",["144"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'nextDate' is assigned a value but never used.","'ClockLoader' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Expected '!==' and instead saw '!='.","'handleOnChange' is assigned a value but never used.","'useState' is defined but never used.","'Redirect' is defined but never used.","'Payment' is defined but never used.","'tableStyle' is assigned a value but never used.","'installment_due_date' is assigned a value but never used.","'installment_amt' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Doughnut' is defined but never used.","'CurrencyFormat' is defined but never used.","'data' is defined but never used.","'dateStr' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"145","fix":"146"},"Update the dependencies array to be: [loanOptions]",{"range":"147","text":"148"},[958,960],"[loanOptions]"]